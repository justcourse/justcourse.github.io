<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>For JUST Courses</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-05-05T06:01:41.197Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Q. Zh.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>20210505_工程软件基础总结</title>
    <link href="http://example.com/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/"/>
    <id>http://example.com/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/</id>
    <published>2021-05-05T05:36:17.000Z</published>
    <updated>2021-05-05T06:01:41.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《工程软件基础》总结"><a href="#《工程软件基础》总结" class="headerlink" title="《工程软件基础》总结"></a>《工程软件基础》总结</h1><h1 id="Part-Ⅰ-工程软件基础-→-绪论"><a href="#Part-Ⅰ-工程软件基础-→-绪论" class="headerlink" title="Part Ⅰ: 工程软件基础 → 绪论"></a>Part Ⅰ: 工程软件基础 → 绪论</h1><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/2156441119670.png" alt="工程软件基础_p1"></p><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/4926641116225.png" alt="工程软件基础_p2"></p><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/4322742111979.png" alt="工程软件基础_p3"></p><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/888843129859.png" alt="工程软件基础_p4"></p><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/2551043127463.png" alt="工程软件_p5"></p><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/5379343124965.png" alt="工程软件基础_p6"></p><h1 id="Part-Ⅱ-工程软件基础-→-Matlab部分"><a href="#Part-Ⅱ-工程软件基础-→-Matlab部分" class="headerlink" title="Part Ⅱ: 工程软件基础 → Matlab部分"></a>Part Ⅱ: 工程软件基础 → Matlab部分</h1><h2 id="1-基础语法"><a href="#1-基础语法" class="headerlink" title="1.基础语法"></a>1.基础语法</h2><h3 id="1-1-分号-表示结束语句。但是，如果要抑制和隐藏表达式的MATLAB输出，请在表达式后添加分号。百分号-用于注释。例："><a href="#1-1-分号-表示结束语句。但是，如果要抑制和隐藏表达式的MATLAB输出，请在表达式后添加分号。百分号-用于注释。例：" class="headerlink" title="1.1 分号(;)表示结束语句。但是，如果要抑制和隐藏表达式的MATLAB输出，请在表达式后添加分号。百分号(%)用于注释。例："></a>1.1 分号(;)表示结束语句。但是，如果要抑制和隐藏表达式的MATLAB输出，请在表达式后添加分号。百分号(%)用于注释。例：</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">3</span>;         <span class="comment">% 有分号，不会在命令行窗口显示x的值</span></span><br><span class="line">y = x + <span class="number">5</span>      <span class="comment">% 无分号，会在命令行窗口显示y的值</span></span><br></pre></td></tr></table></figure><h3 id="1-2-常用的运算符和特殊字符"><a href="#1-2-常用的运算符和特殊字符" class="headerlink" title="1.2 常用的运算符和特殊字符"></a>1.2 常用的运算符和特殊字符</h3><p>MATLAB支持以下常用的运算符和特殊字符 -</p><table><thead><tr><th>运算符</th><th>使用说明</th></tr></thead><tbody><tr><td><code>+</code></td><td>相加; 加法运算符。</td></tr><tr><td><code>-</code></td><td>相减; 减法运算符。</td></tr><tr><td><code>*</code></td><td>标量和矩阵乘法运算符。</td></tr><tr><td><code>.*</code></td><td>阵列乘法运算符。</td></tr><tr><td><code>^</code></td><td>标量和矩阵求幂运算符。</td></tr><tr><td><code>.^</code></td><td>阵列求幂运算符。</td></tr><tr><td><code>\</code></td><td>左除法运算符。</td></tr><tr><td><code>/</code></td><td>右除法运算符。</td></tr><tr><td><code>.\</code></td><td>阵列左除法运算符。</td></tr><tr><td><code>./</code></td><td>右除法运算符。</td></tr><tr><td><code>:</code></td><td>冒号; 生成规则间隔的元素，并表示整个行或列。</td></tr><tr><td><code>( )</code></td><td>括号; 包含函数参数和数组索引; 覆盖优先级。</td></tr><tr><td><code>[ ]</code></td><td>括号; 罩住阵列元素。</td></tr><tr><td><code>.</code></td><td>小数点。</td></tr><tr><td><code>…</code></td><td>省略号; 行连续运算符</td></tr><tr><td><code>,</code></td><td>逗号; 分隔一行中的语句和元素</td></tr><tr><td><code>;</code></td><td>分号; 分隔列并抑制输出显示。</td></tr><tr><td><code>%</code></td><td>百分号;指定一个注释并指定格式。</td></tr><tr><td><code>_</code></td><td>引用符号和转置运算符。</td></tr><tr><td><code>._</code></td><td>非共轭转置运算符。</td></tr><tr><td><code>=</code></td><td>赋值运算符。</td></tr></tbody></table><h3 id="1-3-MATLAB支持以下特殊变量和常量："><a href="#1-3-MATLAB支持以下特殊变量和常量：" class="headerlink" title="1.3 MATLAB支持以下特殊变量和常量："></a>1.3 MATLAB支持以下特殊变量和常量：</h3><table><thead><tr><th>名称</th><th>含义</th></tr></thead><tbody><tr><td><code>ans</code></td><td>最近的回应/回答。</td></tr><tr><td><code>eps</code></td><td>浮点精度精度。</td></tr><tr><td><code>i</code>,<code>j</code></td><td>虚构单位$\sqrt{-1}$。</td></tr><tr><td><code>Inf</code></td><td>无穷</td></tr><tr><td><code>NaN</code></td><td>未定义的数值结果(非数字)。</td></tr><tr><td><code>pi</code></td><td>数字<code>π</code></td></tr></tbody></table><h3 id="1-4-保存变量和加载变量"><a href="#1-4-保存变量和加载变量" class="headerlink" title="1.4 保存变量和加载变量"></a>1.4 保存变量和加载变量</h3><p><code>save</code>命令用于在工作空间中保存所有变量，它在当前目录中，以<code>.mat</code>作为扩展名的文件。</p><p>例如，</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">20</span>;</span><br><span class="line">save a</span><br></pre></td></tr></table></figure><p>可以随时使用<code>load</code>命令重新加载文件。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">load a</span><br></pre></td></tr></table></figure><h2 id="2-Matlab变量"><a href="#2-Matlab变量" class="headerlink" title="2.Matlab变量"></a>2.Matlab变量</h2><ul><li>简单分配变量。</li><li>声明为向量。</li><li>声明为矩阵。</li></ul><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">x1 = <span class="number">12</span>;                                 <span class="comment">% 简单变量</span></span><br><span class="line">x2 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];                      <span class="comment">% 行向量，使用[]</span></span><br><span class="line">x3 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]&#x27;;                     <span class="comment">% 列向量，注意符号 “&#x27;”，该符号表示转置</span></span><br><span class="line">x4 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];                      <span class="comment">% 矩阵，注意符号 “；”</span></span><br><span class="line">x5 = <span class="built_in">zeros</span>(<span class="number">3</span>,<span class="number">4</span>);                         <span class="comment">% 声明3行4列0矩阵</span></span><br><span class="line">x6 = <span class="built_in">ones</span>(<span class="number">5</span>,<span class="number">6</span>);                          <span class="comment">% 声明5行6列1矩阵</span></span><br><span class="line">x7 = <span class="built_in">linspace</span>(<span class="number">12</span>,<span class="number">17</span>,<span class="number">7</span>)                   <span class="comment">% 声明并初始化行向量，包含 12 到 17 之间的 25 个等间距点:[12.0000 12.8333 13.6667 14.5000 15.3333 16.1667 17.0000]</span></span><br><span class="line">x8 = <span class="built_in">eye</span>(<span class="number">5</span>)                              <span class="comment">% 创建5*5方阵，对角元素为1，其他元素为0的矩阵</span></span><br><span class="line">x9 = <span class="built_in">diag</span>([<span class="number">2</span>,<span class="number">5</span>,<span class="number">8</span>])                       <span class="comment">% 根据向量[2,5,8]创建对角矩阵，即以向量的元素为对角元素</span></span><br><span class="line">x10 = <span class="built_in">magic</span>(<span class="number">5</span>)                           <span class="comment">% 创建5*5魔方矩阵</span></span><br><span class="line">x11 = <span class="built_in">rand</span>(<span class="number">3</span>,<span class="number">4</span>)                          <span class="comment">% 创建3*4随机矩阵，在[0,1]区间内服从均匀分布</span></span><br><span class="line">x12 = <span class="built_in">randn</span>(<span class="number">3</span>,<span class="number">4</span>)                         <span class="comment">% 创建3*4随机矩阵，服从正态分布</span></span><br><span class="line">x13 = randperm()                         <span class="comment">% 创建随机行向量</span></span><br><span class="line">x14 = double([<span class="number">5.32</span> <span class="number">3.47</span> <span class="number">6.28</span>]) .* <span class="number">7.5</span>;   <span class="comment">% x8为double类型数据：[39.9000 26.0250 47.1000]</span></span><br><span class="line">x15 = <span class="number">2</span>:<span class="number">0.5</span>:<span class="number">5</span>;                           <span class="comment">% 从2到5之间，每隔0.5取一个数，构成行向量：[2.0  2.5  3.0  3.5  4.0  4.5  5.0]。注意操作符“：”的使用</span></span><br><span class="line">x16 = [<span class="string">&#x27;Fundamentals&#x27;</span>; ...</span><br><span class="line">      <span class="string">&#x27;of&#x27;</span>; ...</span><br><span class="line">      <span class="string">&#x27;engineering software&#x27;</span>];           <span class="comment">% 声明及初始化字符串矩阵变量</span></span><br></pre></td></tr></table></figure><h2 id="3-Matlab命令"><a href="#3-Matlab命令" class="headerlink" title="3.Matlab命令"></a>3.Matlab命令</h2><h3 id="3-1-管理会话的命令"><a href="#3-1-管理会话的命令" class="headerlink" title="3.1 管理会话的命令"></a>3.1 管理会话的命令</h3><table><thead><tr><th>命令</th><th>描述说明</th></tr></thead><tbody><tr><td><code>clc</code></td><td>清除命令窗口</td></tr><tr><td><code>clear</code></td><td>从内存中删除变量</td></tr><tr><td><code>exist</code></td><td>检查文件或变量是否存在</td></tr><tr><td><code>global</code></td><td>声明变量为全局变量</td></tr><tr><td><code>help</code></td><td>搜索帮助主题</td></tr></tbody></table><h3 id="3-2-使用系统命令"><a href="#3-2-使用系统命令" class="headerlink" title="3.2 使用系统命令"></a>3.2 使用系统命令</h3><table><thead><tr><th>命令</th><th>描述说明</th></tr></thead><tbody><tr><td><code>cd</code></td><td>更改当前目录(进入指定目录)</td></tr><tr><td><code>date</code></td><td>显示当前日期</td></tr><tr><td><code>delete</code></td><td>删除文件</td></tr><tr><td><code>diary</code></td><td>打开/关闭日记文件记录</td></tr><tr><td><code>dir</code></td><td>列出当前目录下的所有文件</td></tr><tr><td><code>load</code></td><td>从文件加载工作区变量</td></tr><tr><td><code>path</code></td><td>显示搜索路径</td></tr><tr><td><code>pwd</code></td><td>显示当前目录</td></tr><tr><td><code>save</code></td><td>将工作空间变量保存在文件中</td></tr><tr><td><code>type</code></td><td>显示文件的内容</td></tr><tr><td><code>what</code></td><td>列出当前目录中的所有MATLAB文件</td></tr><tr><td><code>wklread</code></td><td>读取<code>.wk1</code>电子表格文件</td></tr></tbody></table><h3 id="3-3-输入和输出命令"><a href="#3-3-输入和输出命令" class="headerlink" title="3.3 输入和输出命令"></a>3.3 输入和输出命令</h3><table><thead><tr><th>命令</th><th>描述说明</th></tr></thead><tbody><tr><td><code>disp</code></td><td>显示数组或字符串的内容</td></tr><tr><td><code>fscanf</code></td><td>从文件读取格式化数据</td></tr><tr><td><code>format</code></td><td>控制屏幕显示格式</td></tr><tr><td><code>fprintf</code></td><td>对屏幕或文件执行格式化的写入</td></tr><tr><td><code>input</code></td><td>显示提示并等待输入</td></tr></tbody></table><p><code>fscanf</code>和<code>fprintf</code>命令的行为类似于C语言中的<code>scanf</code>和<code>printf</code>函数。它们支持以下格式代码</p><table><thead><tr><th>命令</th><th>描述说明</th></tr></thead><tbody><tr><td><code>%s</code></td><td>格式化为字符串</td></tr><tr><td><code>%d</code></td><td>格式化为字符串整数值</td></tr><tr><td><code>%f</code></td><td>格式化为浮点值</td></tr><tr><td><code>%e</code></td><td>格式化为科学记数法的浮点值</td></tr><tr><td><code>%g</code></td><td>格式最紧凑的形式：<code>%f</code>或<code>%e</code>。</td></tr><tr><td><code>\n</code></td><td>在输出字符串中插入一个换行</td></tr><tr><td><code>\t</code></td><td>在输出字符串中插入制表符</td></tr></tbody></table><p>格式化(<code>format</code>)函数具有以下用于数字显示的形式</p><table><thead><tr><th>命令</th><th>描述说明</th></tr></thead><tbody><tr><td><code>format short</code></td><td>4位十进制数(默认)</td></tr><tr><td><code>format long</code></td><td>16位数字</td></tr><tr><td><code>format short e</code></td><td>5位数加上指数</td></tr><tr><td><code>format long e</code></td><td>16位加上指数</td></tr><tr><td><code>format bank</code></td><td>两位十进制数字</td></tr><tr><td><code>format +</code></td><td>正，负或零</td></tr><tr><td><code>format rat</code></td><td>有理近似</td></tr><tr><td><code>format compact</code></td><td>禁止一些换行符</td></tr><tr><td><code>format loose</code></td><td>重置为较不紧凑的显示模式</td></tr></tbody></table><h3 id="3-4-向量，矩阵和数组命令"><a href="#3-4-向量，矩阵和数组命令" class="headerlink" title="3.4 向量，矩阵和数组命令"></a>3.4 向量，矩阵和数组命令</h3><p>下表显示了用于处理数组，矩阵和向量的各种命令 -</p><table><thead><tr><th>命令</th><th>描述说明</th></tr></thead><tbody><tr><td><code>cat</code></td><td>连接数组</td></tr><tr><td><code>find</code></td><td>查找非零元素的索引</td></tr><tr><td><code>length</code></td><td>计算元素数量</td></tr><tr><td><code>linspace</code></td><td>创建规则间隔的向量</td></tr><tr><td><code>logspace</code></td><td>创建对数间隔向量</td></tr><tr><td><code>max</code></td><td>返回最大的元素</td></tr><tr><td><code>min</code></td><td>返回最小的元素</td></tr><tr><td><code>reshape</code></td><td>改变大小</td></tr><tr><td><code>size</code></td><td>计算数组大小</td></tr><tr><td><code>sort</code></td><td>对每列进行排序</td></tr><tr><td><code>sum</code></td><td>对每列进行求和</td></tr><tr><td><code>eye</code></td><td>创建一个单位矩阵</td></tr><tr><td><code>ones</code></td><td>创建一个数组</td></tr><tr><td><code>zeros</code></td><td>创建一个零的数组</td></tr><tr><td><code>det</code></td><td>计算数组的行列式</td></tr><tr><td><code>inv</code></td><td>计算矩阵的逆</td></tr><tr><td><code>pinv</code></td><td>计算矩阵的伪逆</td></tr><tr><td><code>rank</code></td><td>计算矩阵的秩</td></tr></tbody></table><h3 id="3-5-绘图命令"><a href="#3-5-绘图命令" class="headerlink" title="3.5 绘图命令"></a>3.5 绘图命令</h3><p>MATLAB提供了许多用于绘制图形的命令。下表显示了一些常用的绘图命令 -</p><table><thead><tr><th>命令</th><th>描述说明</th></tr></thead><tbody><tr><td><code>axis</code></td><td>设置轴限制</td></tr><tr><td><code>grid on</code></td><td>显示网格线</td></tr><tr><td><code>plot</code></td><td>生成<code>xy</code>坐标图</td></tr><tr><td><code>title</code></td><td>在文字的顶部放置文字</td></tr><tr><td><code>xlabel</code></td><td>将文本标签添加到<code>x</code>轴</td></tr><tr><td><code>ylabel</code></td><td>将文本标签添加到<code>y</code>轴</td></tr><tr><td><code>axes</code></td><td>创建轴对象</td></tr><tr><td><code>figure</code></td><td>打开一个新的图形窗口</td></tr><tr><td><code>hold on</code></td><td>冻结当前坐标图</td></tr><tr><td><code>hold off</code></td><td>解除冻结当前坐标图</td></tr><tr><td><code>set</code></td><td>指定诸如轴的对象的属性</td></tr><tr><td><code>subplot</code></td><td>在子窗口中创建图</td></tr><tr><td><code>text</code></td><td>在图开放置字符串</td></tr></tbody></table><h2 id="4-Matlab中的运算"><a href="#4-Matlab中的运算" class="headerlink" title="4.Matlab中的运算"></a>4.Matlab中的运算</h2><h3 id="4-1-算术运算符"><a href="#4-1-算术运算符" class="headerlink" title="4.1 算术运算符"></a>4.1 算术运算符</h3><table><thead><tr><th>运算符</th><th>描述说明</th></tr></thead><tbody><tr><td><code>+</code></td><td>加法或一元加法运算。</td></tr><tr><td><code>-</code></td><td>减法或一元减法运算。</td></tr><tr><td><code>*</code></td><td>矩阵乘法</td></tr><tr><td><code>.*</code></td><td>按元素相乘，两矩阵行列数需相同</td></tr><tr><td><code>/</code></td><td>矩阵右除。</td></tr><tr><td><code>./</code></td><td>按元素右除，两矩阵行列数需相同。</td></tr><tr><td><code>\</code></td><td>矩阵左除（也称为反斜杠）。</td></tr><tr><td><code>.\</code></td><td>按元素左除，两矩阵行列数需相同。</td></tr><tr><td><code>^</code></td><td>矩阵幂</td></tr><tr><td><code>.^</code></td><td>按元素求幂，两矩阵行列数需相同。</td></tr><tr><td><code>&#39;</code></td><td>转置。</td></tr><tr><td><code>.&#39;</code></td><td>复共轭转置。</td></tr></tbody></table><h3 id="4-2-关系运算符"><a href="#4-2-关系运算符" class="headerlink" title="4.2 关系运算符"></a>4.2 关系运算符</h3><table><thead><tr><th>操作符</th><th>说明描述</th></tr></thead><tbody><tr><td><code>==</code></td><td>等于</td></tr><tr><td><code>~=</code></td><td>不等于</td></tr></tbody></table><h3 id="4-3-逻辑运算符"><a href="#4-3-逻辑运算符" class="headerlink" title="4.3 逻辑运算符"></a>4.3 逻辑运算符</h3><p>符号<code>&amp;&amp;</code>和<code>||</code>是逻辑运算符<code>AND</code>和<code>OR</code>，常用于if及while语句。</p><h3 id="4-4-位运算"><a href="#4-4-位运算" class="headerlink" title="4.4 位运算"></a>4.4 位运算</h3><table><thead><tr><th>操作符</th><th>说明描述</th></tr></thead><tbody><tr><td><code>&amp;</code></td><td>按位与</td></tr><tr><td>`</td><td>`</td></tr><tr><td><code>^</code></td><td>按位异或</td></tr><tr><td><code>~</code></td><td>按位非</td></tr></tbody></table><h2 id="5-语句"><a href="#5-语句" class="headerlink" title="5.语句"></a>5.语句</h2><h3 id="5-1-条件语句"><a href="#5-1-条件语句" class="headerlink" title="5.1 条件语句"></a>5.1 条件语句</h3><table><thead><tr><th>语句</th><th>描述</th></tr></thead><tbody><tr><td>if…end语句</td><td><code>if ... end</code>语句包含一个布尔表达式，后跟一个或多个语句。</td></tr><tr><td>if…else…end语句</td><td><code>if</code>语句可以跟随一个可选的<code>else</code>语句，当布尔表达式为<code>false</code>时，<code>else</code>语句块将执行。</td></tr><tr><td>if…elseif…elseif…else…end语句</td><td><code>if</code>语句后面可以有一个(或多个)可选<code>elseif ...</code>和一个<code>else</code>语句，这对于测试各种条件非常有用。</td></tr><tr><td>嵌套if语句</td><td>可以在一个<code>if</code>或<code>elseif</code>语句中使用另一个<code>if</code>或<code>elseif</code>语句。</td></tr><tr><td>switch语句</td><td><code>switch</code>语句用来测试一个变量与值列表的相等性。</td></tr><tr><td>嵌套switch语句</td><td>可以在一个<code>switch</code>语句中使用一个<code>switch</code>语句。</td></tr></tbody></table><h3 id="5-2-循环迭代语句"><a href="#5-2-循环迭代语句" class="headerlink" title="5.2 循环迭代语句"></a>5.2 循环迭代语句</h3><table><thead><tr><th>循环类型</th><th>描述</th></tr></thead><tbody><tr><td>while循环</td><td>在给定条件为真时，重复一个语句或一组语句。它在执行循环体之前测试状态。</td></tr><tr><td>for循环</td><td>多次执行一系列语句，并缩写管理循环变量的代码。</td></tr><tr><td>嵌套循环</td><td>在任何循环中使用另外一个或多个循环。</td></tr></tbody></table><h3 id="5-3-跳转语句"><a href="#5-3-跳转语句" class="headerlink" title="5.3 跳转语句"></a>5.3 跳转语句</h3><table><thead><tr><th>语句</th><th>描述</th></tr></thead><tbody><tr><td>return</td><td>跳出整个函数，函数中return之后的代码都不执行。</td></tr><tr><td>break</td><td>跳出最近的循环语句。</td></tr><tr><td>continue</td><td>跳出循环的当前执行，继续从头执行下一次循环。</td></tr></tbody></table><h2 id="6-脚本和函数"><a href="#6-脚本和函数" class="headerlink" title="6.脚本和函数"></a>6.脚本和函数</h2><h3 id="6-1-脚本"><a href="#6-1-脚本" class="headerlink" title="6.1 脚本"></a>6.1 脚本</h3><p>将m语句存储为<code>filename.m</code>文件，则该文件<code>filename.m</code>称之为一个脚本。</p><h3 id="6-2-函数"><a href="#6-2-函数" class="headerlink" title="6.2 函数"></a>6.2 函数</h3><p>Matlab的函数书写规则如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function [out1,out2, ..., outN] &#x3D; myFunName(in1,in2,in3, ..., inN)</span><br></pre></td></tr></table></figure><p>该函数及实现存储为<code>myFunName.m</code>，形成函数<code>myFunName</code>，可供外部调用。注意，此时<code>.m</code>文件的文件名必须与函数名相同！</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">function z &#x3D; myaddfun(x,y)</span><br><span class="line">z &#x3D; x + y;</span><br></pre></td></tr></table></figure><p>该函数必须存储为<code>myaddfun.m</code>，才能被调用。</p><h2 id="7-Matlab绘图"><a href="#7-Matlab绘图" class="headerlink" title="7.Matlab绘图"></a>7.Matlab绘图</h2><p>Matlab的plot，plot3，mesh均可以用于绘图。其中，plot用于绘制二维曲线，plot3用于绘制三维曲线，mesh用于绘制三维网格。</p><h3 id="7-1-plot使用示例"><a href="#7-1-plot使用示例" class="headerlink" title="7.1 plot使用示例"></a>7.1 plot使用示例</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 初始化变量</span></span><br><span class="line">x = -<span class="built_in">pi</span>:<span class="built_in">pi</span>/<span class="number">15</span>:<span class="built_in">pi</span>;</span><br><span class="line">y1 = <span class="built_in">sin</span>(x);</span><br><span class="line">y2 = <span class="built_in">sin</span>(<span class="number">2</span>*x);</span><br><span class="line">y3 = <span class="built_in">cos</span>(<span class="number">3</span>*x);</span><br><span class="line">y4 = <span class="built_in">tan</span>(<span class="built_in">sin</span>(x)) - <span class="built_in">sin</span>(<span class="built_in">tan</span>(x));</span><br><span class="line"></span><br><span class="line"><span class="comment">% 使用plot绘制figure(1)</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">hold</span> on;</span><br><span class="line"><span class="built_in">plot</span>(x,y1);</span><br><span class="line"><span class="built_in">plot</span>(x,y2);</span><br><span class="line"><span class="built_in">plot</span>(x,y3);</span><br><span class="line"><span class="built_in">plot</span>(x,y4);</span><br><span class="line">axis([<span class="number">-4</span> <span class="number">4.5</span> <span class="number">-1.1</span> <span class="number">3</span>])</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&#x27;sin(x)&#x27;</span>,<span class="string">&#x27;sin(2x)&#x27;</span>,<span class="string">&#x27;cos(3x)&#x27;</span>,<span class="string">&#x27;tan(sin(x)) - sin(tan(x))&#x27;</span>)</span><br><span class="line"><span class="built_in">hold</span> off;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 使用plot绘制figure(2)，内含4个子图</span></span><br><span class="line"><span class="built_in">figure</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y1);</span><br><span class="line">axis([<span class="number">-3.5</span> <span class="number">3.5</span> <span class="number">-1.1</span> <span class="number">1.1</span>]);</span><br><span class="line">title(<span class="string">&#x27;2-D Line Plot&#x27;</span>)</span><br><span class="line">xlabel(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">ylabel(<span class="string">&#x27;sin(x)&#x27;</span>)</span><br><span class="line">grid on;</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y1,x,y2,<span class="string">&#x27;--&#x27;</span>,x,y3,<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y1,<span class="string">&#x27;g&#x27;</span>,x,y2,<span class="string">&#x27;b--o&#x27;</span>,x,y3,<span class="string">&#x27;c*&#x27;</span>)</span><br><span class="line"></span><br><span class="line">subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">plot</span>(x,y4,<span class="string">&#x27;--gs&#x27;</span>,...</span><br><span class="line">    <span class="string">&#x27;LineWidth&#x27;</span>,<span class="number">2</span>,...</span><br><span class="line">    <span class="string">&#x27;MarkerSize&#x27;</span>,<span class="number">3</span>,...</span><br><span class="line">    <span class="string">&#x27;MarkerEdgeColor&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,...</span><br><span class="line">    <span class="string">&#x27;MarkerFaceColor&#x27;</span>,[<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>])</span><br></pre></td></tr></table></figure><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/5232515168776.png" alt="Figure 1"></p><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/1779898726299.png" alt="Figure 2"></p><h3 id="7-2-plot3示例"><a href="#7-2-plot3示例" class="headerlink" title="7.2 plot3示例"></a>7.2 plot3示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">% 初始化变量</span><br><span class="line">x &#x3D; -pi:pi&#x2F;15:pi;</span><br><span class="line">y1 &#x3D; sin(x);</span><br><span class="line">y2 &#x3D; sin(2*x);</span><br><span class="line">y3 &#x3D; cos(3*x);</span><br><span class="line"></span><br><span class="line">% 使用plot3绘制figure(3)，plot3为绘制空间中三维点的曲线</span><br><span class="line">figure(3)</span><br><span class="line">plot3(y1,y2,y3);</span><br></pre></td></tr></table></figure><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/4414807515391.png" alt="Figure 3"></p><h3 id="7-3-mesh示例"><a href="#7-3-mesh示例" class="headerlink" title="7.3 mesh示例"></a>7.3 mesh示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">% 初始化变量</span><br><span class="line">[A,B,C] &#x3D; peaks(25);</span><br><span class="line"></span><br><span class="line">% 使用mesh绘制figure(4)，mesh为绘制空间中三维曲面</span><br><span class="line">figure(4)</span><br><span class="line">mesh(A,B,C)</span><br></pre></td></tr></table></figure><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/423031841142.png" alt="Figure 4"></p><h2 id="8-Matlab求解多项式的根"><a href="#8-Matlab求解多项式的根" class="headerlink" title="8.Matlab求解多项式的根"></a>8.Matlab求解多项式的根</h2><p>Matalb可以使用<code>roots()</code>函数求解多项式的根。</p><p>例如：对于多项式$2x^5 + x^4 - 7x^3 - 5x + 9 = 0$求解，代码如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">p = [<span class="number">2</span>, <span class="number">1</span>, <span class="number">-7</span>,  <span class="number">0</span>, <span class="number">-5</span>, <span class="number">9</span>];</span><br><span class="line">s = roots(p)</span><br></pre></td></tr></table></figure><h2 id="9-Matlab求解函数的极限"><a href="#9-Matlab求解函数的极限" class="headerlink" title="9.Matlab求解函数的极限"></a>9.Matlab求解函数的极限</h2><p>Matalb可以使用<code>limit()</code>求解函数的极限。</p><p>例如:$f(x)= x^2 cos(x)$<br>求解：$\lim_{x \to 4} f(x)$</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">syms x</span><br><span class="line">f=x^<span class="number">2</span>*<span class="built_in">cos</span>(x);</span><br><span class="line">limit(f, <span class="number">4</span>)</span><br></pre></td></tr></table></figure><h2 id="10-Matlab求解函数微分"><a href="#10-Matlab求解函数微分" class="headerlink" title="10.Matlab求解函数微分"></a>10.Matlab求解函数微分</h2><p>Matalb可以使用<code>diff()</code>求解函数的微分。</p><p>例如，求解$f(x,y)= x^2 cos(x)$对$x$的一阶和二阶导数。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">syms x</span><br><span class="line">f=x^<span class="number">2</span>*<span class="built_in">cos</span>(x);</span><br><span class="line">diff(f,x)            <span class="comment">% 一阶导</span></span><br><span class="line">diff(f,x,<span class="number">2</span>)          <span class="comment">% 二阶导</span></span><br></pre></td></tr></table></figure><p>例如，分别求解$f(x,y)= x^2ycos(x)+y^2$对$x$和$y$的偏微分。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">syms x</span><br><span class="line">syms y</span><br><span class="line">f=x^<span class="number">2</span>*y*<span class="built_in">cos</span>(x)+y^<span class="number">2</span>;</span><br><span class="line">dx = diff(f,x)        <span class="comment">% f对x的偏导</span></span><br><span class="line">dy = diff(f,y)        <span class="comment">% f对y的偏导</span></span><br></pre></td></tr></table></figure><h2 id="11-Matlab求解函数积分"><a href="#11-Matlab求解函数积分" class="headerlink" title="11.Matlab求解函数积分"></a>11.Matlab求解函数积分</h2><p>Matalb可以使用<code>int()</code>求解函数的积分。</p><h3 id="11-1-求解不定积分"><a href="#11-1-求解不定积分" class="headerlink" title="11.1 求解不定积分"></a>11.1 求解不定积分</h3><p>例如，求解$\int 2xcos(x) - x^2sin(x)dx$</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">syms x</span><br><span class="line">f=<span class="number">2</span>*x*<span class="built_in">cos</span>(x) - x^<span class="number">2</span>*<span class="built_in">sin</span>(x)</span><br><span class="line">int(f)</span><br></pre></td></tr></table></figure><h3 id="11-2-求解定积分"><a href="#11-2-求解定积分" class="headerlink" title="11.2 求解定积分"></a>11.2 求解定积分</h3><p>例如，求解$\int_{1}^{2} 2xcos(x) - x^2sin(x)dx$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">syms x</span><br><span class="line">f&#x3D;2*x*cos(x) - x^2*sin(x)</span><br><span class="line">a &#x3D; int(f, 1, 2)</span><br></pre></td></tr></table></figure><h2 id="12-Simulink部分"><a href="#12-Simulink部分" class="headerlink" title="12.Simulink部分"></a>12.Simulink部分</h2><p>Simulink为Matlab的可视化仿真环境，具体参考课程PPT及实验。</p><h1 id="Part-Ⅲ-工程软件基础-→-Proteus部分"><a href="#Part-Ⅲ-工程软件基础-→-Proteus部分" class="headerlink" title="Part Ⅲ: 工程软件基础 → Proteus部分"></a>Part Ⅲ: 工程软件基础 → Proteus部分</h1><p>Proteus为Lab Center Electronics公司的EDA工具软件，具备Schematic Capture、PCB Layout、Gerbit 三大结构体，可实现原理图设计、仿真、PCB设计等功能。Proteus的体系结构如下图所示。</p><p><img src="/2021/05/05/20210505-SummaryofEngineeringSoftwareFoundation/4778493799546.png" alt="proteus体系结构"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;《工程软件基础》总结&quot;&gt;&lt;a href=&quot;#《工程软件基础》总结&quot; class=&quot;headerlink&quot; title=&quot;《工程软件基础》总结&quot;&gt;&lt;/a&gt;《工程软件基础》总结&lt;/h1&gt;&lt;h1 id=&quot;Part-Ⅰ-工程软件基础-→-绪论&quot;&gt;&lt;a href=&quot;#Par</summary>
      
    
    
    
    <category term="工程软件基础" scheme="http://example.com/categories/%E5%B7%A5%E7%A8%8B%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="工程软件基础" scheme="http://example.com/tags/%E5%B7%A5%E7%A8%8B%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>MCU Experiment 3 - Parallel Interface</title>
    <link href="http://example.com/2021/05/04/20210504-MCUExperiment3-ParalelPortProgramming/"/>
    <id>http://example.com/2021/05/04/20210504-MCUExperiment3-ParalelPortProgramming/</id>
    <published>2021-05-04T14:54:12.000Z</published>
    <updated>2021-05-04T23:36:01.338Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Contents"><a href="#1-Contents" class="headerlink" title="1.Contents"></a>1.Contents</h1><p>Master the programming of the parallel I/O ports.</p><h1 id="2-Basic-principle-and-Experimental-steps"><a href="#2-Basic-principle-and-Experimental-steps" class="headerlink" title="2.Basic principle and Experimental steps"></a>2.Basic principle and Experimental steps</h1><p>Please refer to the following files:</p><ul><li><a href="https://raw.githubusercontent.com/justcourse/mydoc/main/courses/MCU/experiments/Experiment%203.docx">Experiment 3.docx</a></li><li><a href="https://raw.githubusercontent.com/justcourse/mydoc/main/courses/MCU/experiments/Tutorials%20for%20Parallel%20IO%20Programming.docx">Tutorials for Parallel IO Programming.docx</a></li><li><a href="https://raw.githubusercontent.com/justcourse/mydoc/main/courses/MCU/experiments/ParellelPortProgramming_Projects.zip">ParellelPortProgramming_Projects.zip</a></li></ul><h1 id="3-Experiment-results-and-analysis"><a href="#3-Experiment-results-and-analysis" class="headerlink" title="3.Experiment results and analysis"></a>3.Experiment results and analysis</h1><p>Please record experiment results and analyze the results.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-Contents&quot;&gt;&lt;a href=&quot;#1-Contents&quot; class=&quot;headerlink&quot; title=&quot;1.Contents&quot;&gt;&lt;/a&gt;1.Contents&lt;/h1&gt;&lt;p&gt;Master the programming of the parallel</summary>
      
    
    
    
    <category term="MCU" scheme="http://example.com/categories/MCU/"/>
    
    
    <category term="MCU" scheme="http://example.com/tags/MCU/"/>
    
  </entry>
  
  <entry>
    <title>MCU Experiment 2 - 8051 Programming Language</title>
    <link href="http://example.com/2021/05/04/20210504-MCUExperiment2-8051ProgrammingLanguage/"/>
    <id>http://example.com/2021/05/04/20210504-MCUExperiment2-8051ProgrammingLanguage/</id>
    <published>2021-05-04T14:51:05.000Z</published>
    <updated>2021-05-04T14:58:42.891Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Contents"><a href="#1-Contents" class="headerlink" title="1.Contents"></a>1.Contents</h1><p>Learn the programming techniques of the three structures of a program, and be able to use the basic structure to implement common programs such as code conversion and table lookup.</p><h1 id="2-Basic-principle"><a href="#2-Basic-principle" class="headerlink" title="2.Basic principle"></a>2.Basic principle</h1><p>Assembly Language is a pseudo-English representation of the Machine Language. The 8051 Microcontroller Assembly Language is a combination of English like words called Mnemonics and Hexadecimal codes.</p><p>It is also a low level language and requires extensive understanding of the architecture of the Microcontroller.</p><p>Although High-level languages are easy to work with, the following reasons point out the advantage of Assembly Language: The Programs written in Assembly gets executed faster and they occupy less memory. With the help of Assembly Language, you can directly exploit all the features of a Microcontroller. Using Assembly Language, you can have direct and accurate control of all the Microcontroller’s resources like I/O Ports, RAM, SFRs, etc. Compared to High-level Languages, Assembly Language has less rules and restrictions.</p><h1 id="3-Experimental-steps"><a href="#3-Experimental-steps" class="headerlink" title="3.Experimental steps"></a>3.Experimental steps</h1><p>Please refer to the file “<a href="https://raw.githubusercontent.com/justcourse/mydoc/main/courses/MCU/experiments/Experiment%202.docx">Experiment 2.docx</a>“</p><h1 id="4-Experiment-results-and-analysis"><a href="#4-Experiment-results-and-analysis" class="headerlink" title="4.Experiment results and analysis"></a>4.Experiment results and analysis</h1><p>Please record experiment results and analyze the results.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-Contents&quot;&gt;&lt;a href=&quot;#1-Contents&quot; class=&quot;headerlink&quot; title=&quot;1.Contents&quot;&gt;&lt;/a&gt;1.Contents&lt;/h1&gt;&lt;p&gt;Learn the programming techniques of th</summary>
      
    
    
    
    <category term="MCU" scheme="http://example.com/categories/MCU/"/>
    
    
    <category term="MCU" scheme="http://example.com/tags/MCU/"/>
    
  </entry>
  
  <entry>
    <title>MCU Experiment 1 - Establish Environment</title>
    <link href="http://example.com/2021/05/04/20210504-MCUExperiment1-EstablishEnvironment/"/>
    <id>http://example.com/2021/05/04/20210504-MCUExperiment1-EstablishEnvironment/</id>
    <published>2021-05-04T14:17:35.000Z</published>
    <updated>2021-05-04T14:42:13.911Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Contents"><a href="#1-Contents" class="headerlink" title="1.Contents"></a>1.Contents</h1><p>To understand programming environment of MCU, master the debugging method of MCU instruction, and learn the basic programming technology of MCU.</p><h1 id="2-Basic-principle"><a href="#2-Basic-principle" class="headerlink" title="2.Basic principle"></a>2.Basic principle</h1><p>Keil and Proteus are used to program and simulate 8051 serial single chip microcontroller.</p><p>8051 microcontroller needs Keil software for its programming. Programming can be done in C language or assembly language. </p><p>Proteus is a proprietary software tool suite used primarily for electronic design automation. The software is used mainly by electronic design engineers and technicians to create schematics and electronic prints for manufacturing printed circuit boards. The micro-controller simulation in Proteus works by applying either a hex file or a debug file to the microcontroller part on the schematic. It is then co-simulated along with any analog and digital electronics connected to it. This enables its use in a broad spectrum of project prototyping in areas such as motor control, temperature control and user interface design. It also finds use in the general hobbyist community and, since no hardware is required, is convenient to use as a training or teaching tool. 8051 serial MCU is supported for co-simulation.</p><h1 id="3-Experimental-steps"><a href="#3-Experimental-steps" class="headerlink" title="3.Experimental steps"></a>3.Experimental steps</h1><p>Please refer to the file “<a href="https://raw.githubusercontent.com/justcourse/mydoc/main/courses/MCU/experiments/Experiment%201.docx">Experiment 1.docx</a>“</p><h1 id="4-Experiment-results-and-analysis"><a href="#4-Experiment-results-and-analysis" class="headerlink" title="4.Experiment results and analysis"></a>4.Experiment results and analysis</h1><p>Please record experiment results and analyze the results.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-Contents&quot;&gt;&lt;a href=&quot;#1-Contents&quot; class=&quot;headerlink&quot; title=&quot;1.Contents&quot;&gt;&lt;/a&gt;1.Contents&lt;/h1&gt;&lt;p&gt;To understand programming environment </summary>
      
    
    
    
    <category term="MCU" scheme="http://example.com/categories/MCU/"/>
    
    
    <category term="MCU" scheme="http://example.com/tags/MCU/"/>
    
  </entry>
  
  <entry>
    <title>Python写HDF5文件</title>
    <link href="http://example.com/2017/05/18/20170518-Python%E5%86%99HDF5%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2017/05/18/20170518-Python%E5%86%99HDF5%E6%96%87%E4%BB%B6/</id>
    <published>2017-05-18T12:35:02.000Z</published>
    <updated>2021-05-04T14:13:28.559Z</updated>
    
    <content type="html"><![CDATA[<p>采用Caffe实现多float标签回归时需要采用HDF5数据存储方式。本文归纳了Python读取图像数据和标签，并写入HDF5文件的过程。</p><p>假设有 labels.txt 存储标签如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img0.jpg  0 10.5 20.5 30.5 40.5</span><br><span class="line">img1.jpg  1  9.5 19.5 29.5 39.5</span><br></pre></td></tr></table></figure><p>Python写HDF5文件的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> h5py <span class="keyword">as</span> hp</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">h5filesize = <span class="number">10</span> <span class="comment">#修改该值，使HDF5文件小于2GB</span></span><br><span class="line">width = <span class="number">448</span></span><br><span class="line">height = <span class="number">448</span></span><br><span class="line">fid = <span class="built_in">open</span>(<span class="string">&#x27;labels.txt&#x27;</span>)</span><br><span class="line">lines = fid.readlines()</span><br><span class="line">f = hp.File(<span class="string">&#x27;HDF5_FILE.h5&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">imgData = np.zeros((h5filesize, <span class="number">3</span>, height, width))</span><br><span class="line">labels = np.zeros((h5filesize, <span class="number">5</span>))<span class="comment">#标签的长度为5</span></span><br><span class="line">idx=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    line = line.strip().split()</span><br><span class="line">    image = cv2.imread(line[<span class="number">0</span>])<span class="comment">#Caffe中图像为BGR，即imread获得的图像channel的顺序</span></span><br><span class="line">    image = cv2.resize(image,(width, height))</span><br><span class="line">    image = image.transpose((h5filesize, <span class="number">0</span>, <span class="number">1</span>))<span class="comment">#转换为Caffe中数据的存储顺序：C,H,W</span></span><br><span class="line">    imgData[idx, :, :, :] = image</span><br><span class="line">    labels[idx, <span class="number">0</span>] = <span class="built_in">float</span>(line[<span class="number">1</span>])</span><br><span class="line">    labels[idx, <span class="number">1</span>] = <span class="built_in">float</span>(line[<span class="number">2</span>])</span><br><span class="line">    labels[idx, <span class="number">2</span>] = <span class="built_in">float</span>(line[<span class="number">3</span>])</span><br><span class="line">    labels[idx, <span class="number">3</span>] = <span class="built_in">float</span>(line[<span class="number">4</span>])</span><br><span class="line">    labels[idx, <span class="number">4</span>] = <span class="built_in">float</span>(line[<span class="number">4</span>])</span><br><span class="line">    idx + <span class="number">1</span></span><br><span class="line">f[<span class="string">&#x27;data&#x27;</span>] = imgData</span><br><span class="line">f[<span class="string">&#x27;label&#x27;</span>] = labels</span><br><span class="line">fid.close()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Python读取图像数据及标签，写入HDF5文件</summary>
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
    <category term="HDF5" scheme="http://example.com/tags/HDF5/"/>
    
  </entry>
  
  <entry>
    <title>Eigen与Matlab对应函数列表</title>
    <link href="http://example.com/2017/05/17/20170517-Eigen%E4%B8%8EMatlab%E5%AF%B9%E5%BA%94%E5%87%BD%E6%95%B0%E5%88%97%E8%A1%A8/"/>
    <id>http://example.com/2017/05/17/20170517-Eigen%E4%B8%8EMatlab%E5%AF%B9%E5%BA%94%E5%87%BD%E6%95%B0%E5%88%97%E8%A1%A8/</id>
    <published>2017-05-17T08:43:52.000Z</published>
    <updated>2021-05-04T14:13:03.547Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-矩阵运算开源库Eigen与Matlab对应函数列表"><a href="#C-矩阵运算开源库Eigen与Matlab对应函数列表" class="headerlink" title="C++矩阵运算开源库Eigen与Matlab对应函数列表"></a>C++矩阵运算开源库Eigen与Matlab对应函数列表</h1><p>作者：Keir Mierle</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A simple quickref for Eigen. Add anything that&#x27;s missing.</span></span><br><span class="line"><span class="comment">// Main author: Keir Mierle</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Dense&gt;</span></span></span><br><span class="line"></span><br><span class="line">Matrix&lt;<span class="keyword">double</span>, <span class="number">3</span>, <span class="number">3</span>&gt; A;               <span class="comment">// Fixed rows and cols. Same as Matrix3d.</span></span><br><span class="line">Matrix&lt;<span class="keyword">double</span>, <span class="number">3</span>, Dynamic&gt; B;         <span class="comment">// Fixed rows, dynamic cols.</span></span><br><span class="line">Matrix&lt;<span class="keyword">double</span>, Dynamic, Dynamic&gt; C;   <span class="comment">// Full dynamic. Same as MatrixXd.</span></span><br><span class="line">Matrix&lt;<span class="keyword">double</span>, <span class="number">3</span>, <span class="number">3</span>, RowMajor&gt; E;     <span class="comment">// Row major; default is column-major.</span></span><br><span class="line">Matrix3f P, Q, R;                     <span class="comment">// 3x3 float matrix.</span></span><br><span class="line">Vector3f x, y, z;                     <span class="comment">// 3x1 float matrix.</span></span><br><span class="line">RowVector3f a, b, c;                  <span class="comment">// 1x3 float matrix.</span></span><br><span class="line">VectorXd v;                           <span class="comment">// Dynamic column vector of doubles</span></span><br><span class="line"><span class="keyword">double</span> s;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Basic usage</span></span><br><span class="line"><span class="comment">// Eigen          // Matlab           // comments</span></span><br><span class="line">x.<span class="built_in">size</span>()          <span class="comment">// length(x)        // vector size</span></span><br><span class="line">C.<span class="built_in">rows</span>()          <span class="comment">// size(C,1)        // number of rows</span></span><br><span class="line">C.<span class="built_in">cols</span>()          <span class="comment">// size(C,2)        // number of columns</span></span><br><span class="line"><span class="built_in">x</span>(i)              <span class="comment">// x(i+1)           // Matlab is 1-based</span></span><br><span class="line"><span class="built_in">C</span>(i,j)            <span class="comment">// C(i+1,j+1)       //</span></span><br><span class="line"></span><br><span class="line">A.<span class="built_in">resize</span>(<span class="number">4</span>, <span class="number">4</span>);   <span class="comment">// Runtime error if assertions are on.</span></span><br><span class="line">B.<span class="built_in">resize</span>(<span class="number">4</span>, <span class="number">9</span>);   <span class="comment">// Runtime error if assertions are on.</span></span><br><span class="line">A.<span class="built_in">resize</span>(<span class="number">3</span>, <span class="number">3</span>);   <span class="comment">// Ok; size didn&#x27;t change.</span></span><br><span class="line">B.<span class="built_in">resize</span>(<span class="number">3</span>, <span class="number">9</span>);   <span class="comment">// Ok; only dynamic cols changed.</span></span><br><span class="line"></span><br><span class="line">A &lt;&lt; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,     <span class="comment">// Initialize A. The elements can also be</span></span><br><span class="line">     <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>,     <span class="comment">// matrices, which are stacked along cols</span></span><br><span class="line">     <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>;     <span class="comment">// and then the rows are stacked.</span></span><br><span class="line">B &lt;&lt; A, A, A;     <span class="comment">// B is three horizontally stacked A&#x27;s.</span></span><br><span class="line">A.<span class="built_in">fill</span>(<span class="number">10</span>);       <span class="comment">// Fill A with all 10&#x27;s.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Eigen                            // Matlab</span></span><br><span class="line">MatrixXd::<span class="built_in">Identity</span>(rows,cols)       <span class="comment">// eye(rows,cols)</span></span><br><span class="line">C.<span class="built_in">setIdentity</span>(rows,cols)            <span class="comment">// C = eye(rows,cols)</span></span><br><span class="line">MatrixXd::<span class="built_in">Zero</span>(rows,cols)           <span class="comment">// zeros(rows,cols)</span></span><br><span class="line">C.<span class="built_in">setZero</span>(rows,cols)                <span class="comment">// C = ones(rows,cols)</span></span><br><span class="line">MatrixXd::<span class="built_in">Ones</span>(rows,cols)           <span class="comment">// ones(rows,cols)</span></span><br><span class="line">C.<span class="built_in">setOnes</span>(rows,cols)                <span class="comment">// C = ones(rows,cols)</span></span><br><span class="line">MatrixXd::<span class="built_in">Random</span>(rows,cols)         <span class="comment">// rand(rows,cols)*2-1        // MatrixXd::Random returns uniform random numbers in (-1, 1).</span></span><br><span class="line">C.<span class="built_in">setRandom</span>(rows,cols)              <span class="comment">// C = rand(rows,cols)*2-1</span></span><br><span class="line">VectorXd::<span class="built_in">LinSpaced</span>(size,low,high)   <span class="comment">// linspace(low,high,size)&#x27;</span></span><br><span class="line">v.<span class="built_in">setLinSpaced</span>(size,low,high)        <span class="comment">// v = linspace(low,high,size)&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Matrix slicing and blocks. All expressions listed here are read/write.</span></span><br><span class="line"><span class="comment">// Templated size versions are faster. Note that Matlab is 1-based (a size N</span></span><br><span class="line"><span class="comment">// vector is x(1)...x(N)).</span></span><br><span class="line"><span class="comment">// Eigen                           // Matlab</span></span><br><span class="line">x.<span class="built_in">head</span>(n)                          <span class="comment">// x(1:n)</span></span><br><span class="line">x.head&lt;n&gt;()                        <span class="comment">// x(1:n)</span></span><br><span class="line">x.<span class="built_in">tail</span>(n)                          <span class="comment">// x(end - n + 1: end)</span></span><br><span class="line">x.tail&lt;n&gt;()                        <span class="comment">// x(end - n + 1: end)</span></span><br><span class="line">x.<span class="built_in">segment</span>(i, n)                    <span class="comment">// x(i+1 : i+n)</span></span><br><span class="line">x.segment&lt;n&gt;(i)                    <span class="comment">// x(i+1 : i+n)</span></span><br><span class="line">P.<span class="built_in">block</span>(i, j, rows, cols)          <span class="comment">// P(i+1 : i+rows, j+1 : j+cols)</span></span><br><span class="line">P.block&lt;rows, cols&gt;(i, j)          <span class="comment">// P(i+1 : i+rows, j+1 : j+cols)</span></span><br><span class="line">P.<span class="built_in">row</span>(i)                           <span class="comment">// P(i+1, :)</span></span><br><span class="line">P.<span class="built_in">col</span>(j)                           <span class="comment">// P(:, j+1)</span></span><br><span class="line">P.leftCols&lt;cols&gt;()                 <span class="comment">// P(:, 1:cols)</span></span><br><span class="line">P.<span class="built_in">leftCols</span>(cols)                   <span class="comment">// P(:, 1:cols)</span></span><br><span class="line">P.middleCols&lt;cols&gt;(j)              <span class="comment">// P(:, j+1:j+cols)</span></span><br><span class="line">P.<span class="built_in">middleCols</span>(j, cols)              <span class="comment">// P(:, j+1:j+cols)</span></span><br><span class="line">P.rightCols&lt;cols&gt;()                <span class="comment">// P(:, end-cols+1:end)</span></span><br><span class="line">P.<span class="built_in">rightCols</span>(cols)                  <span class="comment">// P(:, end-cols+1:end)</span></span><br><span class="line">P.topRows&lt;rows&gt;()                  <span class="comment">// P(1:rows, :)</span></span><br><span class="line">P.<span class="built_in">topRows</span>(rows)                    <span class="comment">// P(1:rows, :)</span></span><br><span class="line">P.middleRows&lt;rows&gt;(i)              <span class="comment">// P(:, i+1:i+rows)</span></span><br><span class="line">P.<span class="built_in">middleRows</span>(i, rows)              <span class="comment">// P(:, i+1:i+rows)</span></span><br><span class="line">P.bottomRows&lt;rows&gt;()               <span class="comment">// P(:, end-rows+1:end)</span></span><br><span class="line">P.<span class="built_in">bottomRows</span>(rows)                 <span class="comment">// P(:, end-rows+1:end)</span></span><br><span class="line">P.<span class="built_in">topLeftCorner</span>(rows, cols)        <span class="comment">// P(1:rows, 1:cols)</span></span><br><span class="line">P.<span class="built_in">topRightCorner</span>(rows, cols)       <span class="comment">// P(1:rows, end-cols+1:end)</span></span><br><span class="line">P.<span class="built_in">bottomLeftCorner</span>(rows, cols)     <span class="comment">// P(end-rows+1:end, 1:cols)</span></span><br><span class="line">P.<span class="built_in">bottomRightCorner</span>(rows, cols)    <span class="comment">// P(end-rows+1:end, end-cols+1:end)</span></span><br><span class="line">P.topLeftCorner&lt;rows,cols&gt;()       <span class="comment">// P(1:rows, 1:cols)</span></span><br><span class="line">P.topRightCorner&lt;rows,cols&gt;()      <span class="comment">// P(1:rows, end-cols+1:end)</span></span><br><span class="line">P.bottomLeftCorner&lt;rows,cols&gt;()    <span class="comment">// P(end-rows+1:end, 1:cols)</span></span><br><span class="line">P.bottomRightCorner&lt;rows,cols&gt;()   <span class="comment">// P(end-rows+1:end, end-cols+1:end)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Of particular note is Eigen&#x27;s swap function which is highly optimized.</span></span><br><span class="line"><span class="comment">// Eigen                           // Matlab</span></span><br><span class="line">R.<span class="built_in">row</span>(i) = P.<span class="built_in">col</span>(j);               <span class="comment">// R(i, :) = P(:, i)</span></span><br><span class="line">R.<span class="built_in">col</span>(j1).<span class="built_in">swap</span>(mat1.<span class="built_in">col</span>(j2));      <span class="comment">// R(:, [j1 j2]) = R(:, [j2, j1])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Views, transpose, etc; all read-write except for .adjoint().</span></span><br><span class="line"><span class="comment">// Eigen                           // Matlab</span></span><br><span class="line">R.<span class="built_in">adjoint</span>()                        <span class="comment">// R&#x27;</span></span><br><span class="line">R.<span class="built_in">transpose</span>()                      <span class="comment">// R.&#x27; or conj(R&#x27;)</span></span><br><span class="line">R.<span class="built_in">diagonal</span>()                       <span class="comment">// diag(R)</span></span><br><span class="line">x.<span class="built_in">asDiagonal</span>()                     <span class="comment">// diag(x)</span></span><br><span class="line">R.<span class="built_in">transpose</span>().<span class="built_in">colwise</span>().<span class="built_in">reverse</span>(); <span class="comment">// rot90(R)</span></span><br><span class="line">R.<span class="built_in">conjugate</span>()                      <span class="comment">// conj(R)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// All the same as Matlab, but matlab doesn&#x27;t have *= style operators.</span></span><br><span class="line"><span class="comment">// Matrix-vector.  Matrix-matrix.   Matrix-scalar.</span></span><br><span class="line">y  = M*x;          R  = P*Q;        R  = P*s;</span><br><span class="line">a  = b*M;          R  = P - Q;      R  = s*P;</span><br><span class="line">a *= M;            R  = P + Q;      R  = P/s;</span><br><span class="line">                   R *= Q;          R  = s*P;</span><br><span class="line">                   R += Q;          R *= s;</span><br><span class="line">                   R -= Q;          R /= s;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Vectorized operations on each element independently</span></span><br><span class="line"><span class="comment">// Eigen                  // Matlab</span></span><br><span class="line">R = P.<span class="built_in">cwiseProduct</span>(Q);    <span class="comment">// R = P .* Q</span></span><br><span class="line">R = P.<span class="built_in">array</span>() * s.<span class="built_in">array</span>();<span class="comment">// R = P .* s</span></span><br><span class="line">R = P.<span class="built_in">cwiseQuotient</span>(Q);   <span class="comment">// R = P ./ Q</span></span><br><span class="line">R = P.<span class="built_in">array</span>() / Q.<span class="built_in">array</span>();<span class="comment">// R = P ./ Q</span></span><br><span class="line">R = P.<span class="built_in">array</span>() + s.<span class="built_in">array</span>();<span class="comment">// R = P + s</span></span><br><span class="line">R = P.<span class="built_in">array</span>() - s.<span class="built_in">array</span>();<span class="comment">// R = P - s</span></span><br><span class="line">R.<span class="built_in">array</span>() += s;           <span class="comment">// R = R + s</span></span><br><span class="line">R.<span class="built_in">array</span>() -= s;           <span class="comment">// R = R - s</span></span><br><span class="line">R.<span class="built_in">array</span>() &lt; Q.<span class="built_in">array</span>();    <span class="comment">// R &lt; Q</span></span><br><span class="line">R.<span class="built_in">array</span>() &lt;= Q.<span class="built_in">array</span>();   <span class="comment">// R &lt;= Q</span></span><br><span class="line">R.<span class="built_in">cwiseInverse</span>();         <span class="comment">// 1 ./ P</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">inverse</span>();      <span class="comment">// 1 ./ P</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">sin</span>()           <span class="comment">// sin(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">cos</span>()           <span class="comment">// cos(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">pow</span>(s)          <span class="comment">// P .^ s</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">square</span>()        <span class="comment">// P .^ 2</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">cube</span>()          <span class="comment">// P .^ 3</span></span><br><span class="line">R.<span class="built_in">cwiseSqrt</span>()             <span class="comment">// sqrt(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">sqrt</span>()          <span class="comment">// sqrt(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">exp</span>()           <span class="comment">// exp(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">log</span>()           <span class="comment">// log(P)</span></span><br><span class="line">R.<span class="built_in">cwiseMax</span>(P)             <span class="comment">// max(R, P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">max</span>(P.<span class="built_in">array</span>())  <span class="comment">// max(R, P)</span></span><br><span class="line">R.<span class="built_in">cwiseMin</span>(P)             <span class="comment">// min(R, P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">min</span>(P.<span class="built_in">array</span>())  <span class="comment">// min(R, P)</span></span><br><span class="line">R.<span class="built_in">cwiseAbs</span>()              <span class="comment">// abs(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">abs</span>()           <span class="comment">// abs(P)</span></span><br><span class="line">R.<span class="built_in">cwiseAbs2</span>()             <span class="comment">// abs(P.^2)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">abs2</span>()          <span class="comment">// abs(P.^2)</span></span><br><span class="line">(R.<span class="built_in">array</span>() &lt; s).<span class="built_in">select</span>(P,Q);  <span class="comment">// (R &lt; s ? P : Q)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Reductions.</span></span><br><span class="line"><span class="keyword">int</span> r, c;</span><br><span class="line"><span class="comment">// Eigen                  // Matlab</span></span><br><span class="line">R.<span class="built_in">minCoeff</span>()              <span class="comment">// min(R(:))</span></span><br><span class="line">R.<span class="built_in">maxCoeff</span>()              <span class="comment">// max(R(:))</span></span><br><span class="line">s = R.<span class="built_in">minCoeff</span>(&amp;r, &amp;c)    <span class="comment">// [s, i] = min(R(:)); [r, c] = ind2sub(size(R), i);</span></span><br><span class="line">s = R.<span class="built_in">maxCoeff</span>(&amp;r, &amp;c)    <span class="comment">// [s, i] = max(R(:)); [r, c] = ind2sub(size(R), i);</span></span><br><span class="line">R.<span class="built_in">sum</span>()                   <span class="comment">// sum(R(:))</span></span><br><span class="line">R.<span class="built_in">colwise</span>().<span class="built_in">sum</span>()         <span class="comment">// sum(R)</span></span><br><span class="line">R.<span class="built_in">rowwise</span>().<span class="built_in">sum</span>()         <span class="comment">// sum(R, 2) or sum(R&#x27;)&#x27;</span></span><br><span class="line">R.<span class="built_in">prod</span>()                  <span class="comment">// prod(R(:))</span></span><br><span class="line">R.<span class="built_in">colwise</span>().<span class="built_in">prod</span>()        <span class="comment">// prod(R)</span></span><br><span class="line">R.<span class="built_in">rowwise</span>().<span class="built_in">prod</span>()        <span class="comment">// prod(R, 2) or prod(R&#x27;)&#x27;</span></span><br><span class="line">R.<span class="built_in">trace</span>()                 <span class="comment">// trace(R)</span></span><br><span class="line">R.<span class="built_in">all</span>()                   <span class="comment">// all(R(:))</span></span><br><span class="line">R.<span class="built_in">colwise</span>().<span class="built_in">all</span>()         <span class="comment">// all(R)</span></span><br><span class="line">R.<span class="built_in">rowwise</span>().<span class="built_in">all</span>()         <span class="comment">// all(R, 2)</span></span><br><span class="line">R.<span class="built_in">any</span>()                   <span class="comment">// any(R(:))</span></span><br><span class="line">R.<span class="built_in">colwise</span>().<span class="built_in">any</span>()         <span class="comment">// any(R)</span></span><br><span class="line">R.<span class="built_in">rowwise</span>().<span class="built_in">any</span>()         <span class="comment">// any(R, 2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Dot products, norms, etc.</span></span><br><span class="line"><span class="comment">// Eigen                  // Matlab</span></span><br><span class="line">x.<span class="built_in">norm</span>()                  <span class="comment">// norm(x).    Note that norm(R) doesn&#x27;t work in Eigen.</span></span><br><span class="line">x.<span class="built_in">squaredNorm</span>()           <span class="comment">// dot(x, x)   Note the equivalence is not true for complex</span></span><br><span class="line">x.<span class="built_in">dot</span>(y)                  <span class="comment">// dot(x, y)</span></span><br><span class="line">x.<span class="built_in">cross</span>(y)                <span class="comment">// cross(x, y) Requires #include &lt;Eigen/Geometry&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//// Type conversion</span></span><br><span class="line"><span class="comment">// Eigen                           // Matlab</span></span><br><span class="line">A.cast&lt;<span class="keyword">double</span>&gt;();                  <span class="comment">// double(A)</span></span><br><span class="line">A.cast&lt;<span class="keyword">float</span>&gt;();                   <span class="comment">// single(A)</span></span><br><span class="line">A.cast&lt;<span class="keyword">int</span>&gt;();                     <span class="comment">// int32(A)</span></span><br><span class="line">A.<span class="built_in">real</span>();                          <span class="comment">// real(A)</span></span><br><span class="line">A.<span class="built_in">imag</span>();                          <span class="comment">// imag(A)</span></span><br><span class="line"><span class="comment">// if the original type equals destination type, no work is done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Note that for most operations Eigen requires all operands to have the same type:</span></span><br><span class="line">MatrixXf F = MatrixXf::<span class="built_in">Zero</span>(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line">A += F;                <span class="comment">// illegal in Eigen. In Matlab A = A+F is allowed</span></span><br><span class="line">A += F.cast&lt;<span class="keyword">double</span>&gt;(); <span class="comment">// F converted to double and then added (generally, conversion happens on-the-fly)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Eigen can map existing memory into Eigen matrices.</span></span><br><span class="line"><span class="keyword">float</span> array[<span class="number">3</span>];</span><br><span class="line">Vector3f::<span class="built_in">Map</span>(array).<span class="built_in">fill</span>(<span class="number">10</span>);            <span class="comment">// create a temporary Map over array and sets entries to 10</span></span><br><span class="line"><span class="keyword">int</span> data[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line"><span class="function">Matrix2i <span class="title">mat2x2</span><span class="params">(data)</span></span>;                    <span class="comment">// copies data into mat2x2</span></span><br><span class="line">Matrix2i::<span class="built_in">Map</span>(data) = <span class="number">2</span>*mat2x2;           <span class="comment">// overwrite elements of data with 2*mat2x2</span></span><br><span class="line">MatrixXi::<span class="built_in">Map</span>(data, <span class="number">2</span>, <span class="number">2</span>) += mat2x2;      <span class="comment">// adds mat2x2 to elements of data (alternative syntax if size is not know at compile time)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Solve Ax = b. Result stored in x. Matlab: x = A \ b.</span></span><br><span class="line">x = A.<span class="built_in">ldlt</span>().<span class="built_in">solve</span>(b));  <span class="comment">// A sym. p.s.d.    #include &lt;Eigen/Cholesky&gt;</span></span><br><span class="line">x = A.<span class="built_in">llt</span>() .<span class="built_in">solve</span>(b));  <span class="comment">// A sym. p.d.      #include &lt;Eigen/Cholesky&gt;</span></span><br><span class="line">x = A.<span class="built_in">lu</span>()  .<span class="built_in">solve</span>(b));  <span class="comment">// Stable and fast. #include &lt;Eigen/LU&gt;</span></span><br><span class="line">x = A.<span class="built_in">qr</span>()  .<span class="built_in">solve</span>(b));  <span class="comment">// No pivoting.     #include &lt;Eigen/QR&gt;</span></span><br><span class="line">x = A.<span class="built_in">svd</span>() .<span class="built_in">solve</span>(b));  <span class="comment">// Stable, slowest. #include &lt;Eigen/SVD&gt;</span></span><br><span class="line"><span class="comment">// .ldlt() -&gt; .matrixL() and .matrixD()</span></span><br><span class="line"><span class="comment">// .llt()  -&gt; .matrixL()</span></span><br><span class="line"><span class="comment">// .lu()   -&gt; .matrixL() and .matrixU()</span></span><br><span class="line"><span class="comment">// .qr()   -&gt; .matrixQ() and .matrixR()</span></span><br><span class="line"><span class="comment">// .svd()  -&gt; .matrixU(), .singularValues(), and .matrixV()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Eigenvalue problems</span></span><br><span class="line"><span class="comment">// Eigen                          // Matlab</span></span><br><span class="line">A.<span class="built_in">eigenvalues</span>();                  <span class="comment">// eig(A);</span></span><br><span class="line"><span class="function">EigenSolver&lt;Matrix3d&gt; <span class="title">eig</span><span class="params">(A)</span></span>;     <span class="comment">// [vec val] = eig(A)</span></span><br><span class="line">eig.<span class="built_in">eigenvalues</span>();                <span class="comment">// diag(val)</span></span><br><span class="line">eig.<span class="built_in">eigenvectors</span>();               <span class="comment">// vec</span></span><br><span class="line"><span class="comment">// For self-adjoint matrices use SelfAdjointEigenSolver&lt;&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">C++ 矩阵运算开源库Eigen常用函数与Matlab中函数的对应</summary>
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    
    <category term="C++" scheme="http://example.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>CMakeLists.txt中声明使用C++11标准</title>
    <link href="http://example.com/2017/05/09/20170509-CMakeLists.txt-%E4%BD%BF%E7%94%A8C++11%E6%A0%87%E5%87%86/"/>
    <id>http://example.com/2017/05/09/20170509-CMakeLists.txt-%E4%BD%BF%E7%94%A8C++11%E6%A0%87%E5%87%86/</id>
    <published>2017-05-09T04:05:32.000Z</published>
    <updated>2021-05-04T14:12:19.683Z</updated>
    
    <content type="html"><![CDATA[<p>在CMakeLists.txt中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_definitions(-std&#x3D;c++11) </span><br></pre></td></tr></table></figure><p>即可。</p>]]></content>
    
    
    <summary type="html">在CMakeLists.txt中声明使用C++11标准</summary>
    
    
    
    <category term="C++" scheme="http://example.com/categories/C/"/>
    
    
    <category term="cmake" scheme="http://example.com/tags/cmake/"/>
    
    <category term="c++11" scheme="http://example.com/tags/c-11/"/>
    
  </entry>
  
  <entry>
    <title>Git命令行操作指南——上传项目</title>
    <link href="http://example.com/2017/05/09/20170509-Git-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://example.com/2017/05/09/20170509-Git-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</id>
    <published>2017-05-09T01:24:07.000Z</published>
    <updated>2021-05-04T14:27:35.663Z</updated>
    
    <content type="html"><![CDATA[<p>假设已经在github上创建了项目名，地址为:<a href="https://github.com/xx/xx.git">https://github.com/xx/xx.git</a></p><h3 id="1-创建项目目录并初始化"><a href="#1-创建项目目录并初始化" class="headerlink" title="1.创建项目目录并初始化"></a>1.创建项目目录并初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir *** <span class="comment">#项目文件夹</span></span><br><span class="line"><span class="built_in">cd</span> ***</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="2-将所有文件添加到暂存区"><a href="#2-将所有文件添加到暂存区" class="headerlink" title="2.将所有文件添加到暂存区"></a>2.将所有文件添加到暂存区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h3 id="3-将暂存区的文件提交至本地仓库"><a href="#3-将暂存区的文件提交至本地仓库" class="headerlink" title="3.将暂存区的文件提交至本地仓库"></a>3.将暂存区的文件提交至本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “注释<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-将本地仓库关联到Github上"><a href="#4-将本地仓库关联到Github上" class="headerlink" title="4.将本地仓库关联到Github上"></a>4.将本地仓库关联到Github上</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/xx/xx.git</span><br></pre></td></tr></table></figure><h3 id="5-将代码由本地仓库上传到Github远程仓库"><a href="#5-将代码由本地仓库上传到Github远程仓库" class="headerlink" title="5.将代码由本地仓库上传到Github远程仓库"></a>5.将代码由本地仓库上传到Github远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Git 命令使用简介</summary>
    
    
    
    <category term="Git" scheme="http://example.com/categories/Git/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo文章排序</title>
    <link href="http://example.com/2017/05/02/20170502-Hexo%E6%96%87%E7%AB%A0%E6%8E%92%E5%BA%8F/"/>
    <id>http://example.com/2017/05/02/20170502-Hexo%E6%96%87%E7%AB%A0%E6%8E%92%E5%BA%8F/</id>
    <published>2017-05-02T06:10:35.000Z</published>
    <updated>2021-05-04T14:12:00.151Z</updated>
    
    <content type="html"><![CDATA[<ol><li>修改文件夹中的 node_modules/hexo-generator-index/lib/generator.js文件，在var posts一句后面加入如下代码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">posts.data &#x3D; posts.data.sort(function(first, second) &#123;</span><br><span class="line">        if (first.top &amp;&amp; second.top) &#123; &#x2F;&#x2F; 两篇文章top都有定义</span><br><span class="line">            return first.top &#x3D;&#x3D; second.top ? second.date - first.date : second.top - first.top &#x2F;&#x2F;若top值一样则按照文章日期降序排, 否则按照top值降序排</span><br><span class="line">        &#125; else if (first.top &amp;&amp; !second.top) &#123; &#x2F;&#x2F; 以下是只有一篇文章top有定义，将有top的排在前面</span><br><span class="line">            return -1;</span><br><span class="line">        &#125; else if (!first.top &amp;&amp; second.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return second.date - first.date;  &#x2F;&#x2F; 都没定义top，按照文章日期降序排</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>修改后的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line"></span><br><span class="line">var pagination &#x3D; require(&#39;hexo-pagination&#39;);</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; function(locals) &#123;</span><br><span class="line">  var config &#x3D; this.config;</span><br><span class="line">  var posts &#x3D; locals.posts.sort(config.index_generator.order_by);</span><br><span class="line"></span><br><span class="line">  posts.data &#x3D; posts.data.sort(function(first, second) &#123;</span><br><span class="line">        if (first.top &amp;&amp; second.top) &#123;</span><br><span class="line">            return first.top &#x3D;&#x3D; second.top ? second.date - first.date : second.top - first.top</span><br><span class="line">        &#125; else if (first.top &amp;&amp; !second.top) &#123;</span><br><span class="line">            return -1;</span><br><span class="line">        &#125; else if (!first.top &amp;&amp; second.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return second.date - first.date;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  var paginationDir &#x3D; config.pagination_dir || &#39;page&#39;;</span><br><span class="line">  var path &#x3D; config.index_generator.path || &#39;&#39;;</span><br><span class="line"></span><br><span class="line">  return pagination(path, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&#39;index&#39;, &#39;archive&#39;],</span><br><span class="line">    format: paginationDir + &#39;&#x2F;%d&#x2F;&#39;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.在Markdown文件头位置，加入如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top: 数字 #数字越大，排名越靠前。</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Hexo文章排序</summary>
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 建立个人博客</title>
    <link href="http://example.com/2017/05/01/20170501-Hexo-%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2017/05/01/20170501-Hexo-%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2017-05-01T06:17:35.000Z</published>
    <updated>2021-05-04T14:11:50.779Z</updated>
    
    <content type="html"><![CDATA[<p>假设已经在github上创建了项目，项目名为<code>abc.github.io</code></p><h1 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h1><ul><li><input checked disabled type="checkbox"> 安装Git</li><li><input checked disabled type="checkbox"> 安装Node.js</li><li><input checked disabled type="checkbox"> 安装Hexo</li><li><input checked disabled type="checkbox"> GitHub创建个人仓库</li><li><input checked disabled type="checkbox"> 生成SSH添加到GitHub</li><li><input checked disabled type="checkbox"> 将hexo部署到GitHub</li><li><input checked disabled type="checkbox"> 设置个人域名</li><li><input checked disabled type="checkbox"> 发布文章</li></ul><h2 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h2 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><p>安装hexo，输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir myblog</span><br><span class="line">cd myblog</span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>初始化hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>完成后，文件夹目录包含如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">node_modules: 依赖包</span><br><span class="line">public：存放生成的页面</span><br><span class="line">scaffolds：生成文章的一些模板</span><br><span class="line">source：用来存放你的文章</span><br><span class="line">themes：主题</span><br><span class="line">_config.yml: 博客的配置文件</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>清理、生成网页，打开hexo的服务，在浏览器输入localhost:4000可以看到生成的博客。</p><h2 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4. GitHub创建个人仓库"></a>4. GitHub创建个人仓库</h2><p>注册并登录github后，新建仓库New repository</p><p>创建与用户名相同的仓库，如：abc.github.io，其中abc为GitHub用户名。</p><p>点击create repository。</p><h2 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5. 生成SSH添加到GitHub"></a>5. 生成SSH添加到GitHub</h2><p>回到shell，输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>yourname为GitHub的用户名，youremail为GitHub的邮箱，该操作用于github对用户名和邮箱信息进行匹配验证。</p><p>检查上述name和email是否正确</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>创建SSH</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>生成~/.ssh的文件夹及密钥文件。</p><p>在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key。</p><p>复制SSH生成的id_rsa.pub中的信息并粘贴到文本框中。</p><h2 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub"></a>6. 将hexo部署到GitHub</h2><p>运行如下命令，适中保存github用户名和密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><p>修改配置文件<code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;abc&#x2F;abc.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>安装<code>deploy-git</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>使用hexo命令清理、生成、部署博客网页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>必要时输入username和password。</p>]]></content>
    
    
    <summary type="html">Hexo 建立个人博客.</summary>
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Create New Page</title>
    <link href="http://example.com/2017/04/20/20170420-CreateNewPage/"/>
    <id>http://example.com/2017/04/20/20170420-CreateNewPage/</id>
    <published>2017-04-20T06:17:35.000Z</published>
    <updated>2021-05-05T01:33:36.649Z</updated>
    
    <content type="html"><![CDATA[<h1 id="This-is-the-title"><a href="#This-is-the-title" class="headerlink" title="This is the title."></a>This is the title.</h1><h2 id="This-is-a-code-block"><a href="#This-is-a-code-block" class="headerlink" title="This is a code block."></a>This is a code block.</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z = <span class="number">-32768</span>;</span><br><span class="line">    z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="This-is-a-table"><a href="#This-is-a-table" class="headerlink" title="This is a table."></a>This is a table.</h2><table><thead><tr><th>Variable</th><th>Value</th></tr></thead><tbody><tr><td>a</td><td>10</td></tr><tr><td>b</td><td>20</td></tr></tbody></table><h2 id="This-is-a-math-equation"><a href="#This-is-a-math-equation" class="headerlink" title="This is a math equation"></a>This is a math equation</h2><p>$$<br>    \sum_{i=0}^N\int_{a}^{b}g(t,i)\text{d}t<br>$$</p><h2 id="This-is-a-mermaid-chart"><a href="#This-is-a-mermaid-chart" class="headerlink" title="This is a mermaid chart"></a>This is a mermaid chart</h2><div class="mermaid">pietitle Key elements in Product X&quot;Calcium&quot; : 42.96&quot;Potassium&quot; : 50.05&quot;Magnesium&quot; : 10.01&quot;Iron&quot; : 5</div><h2 id="This-is-an-image"><a href="#This-is-an-image" class="headerlink" title="This is an image"></a>This is an image</h2><p><img src="https://raw.githubusercontent.com/justcourse/mydoc/main/getoffinternet.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;This-is-the-title&quot;&gt;&lt;a href=&quot;#This-is-the-title&quot; class=&quot;headerlink&quot; title=&quot;This is the title.&quot;&gt;&lt;/a&gt;This is the title.&lt;/h1&gt;&lt;h2 id=&quot;Thi</summary>
      
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
