<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MCU Experiment 1 - Establish Environment</title>
      <link href="2021/05/04/20210504-MCUExperiment1-EstablishEnvironment/"/>
      <url>2021/05/04/20210504-MCUExperiment1-EstablishEnvironment/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Contents"><a href="#1-Contents" class="headerlink" title="1.Contents"></a>1.Contents</h1><p>To understand programming environment of MCU, master the debugging method of MCU instruction, and learn the basic programming technology of MCU.</p><h1 id="2-Basic-principle"><a href="#2-Basic-principle" class="headerlink" title="2.Basic principle"></a>2.Basic principle</h1><p>Keil and Proteus are used to program and simulate 8051 serial single chip microcontroller.</p><p>8051 microcontroller needs Keil software for its programming. Programming can be done in C language or assembly language. </p><p>Proteus is a proprietary software tool suite used primarily for electronic design automation. The software is used mainly by electronic design engineers and technicians to create schematics and electronic prints for manufacturing printed circuit boards. The micro-controller simulation in Proteus works by applying either a hex file or a debug file to the microcontroller part on the schematic. It is then co-simulated along with any analog and digital electronics connected to it. This enables its use in a broad spectrum of project prototyping in areas such as motor control, temperature control and user interface design. It also finds use in the general hobbyist community and, since no hardware is required, is convenient to use as a training or teaching tool. 8051 serial MCU is supported for co-simulation.</p><h1 id="3-Experimental-steps"><a href="#3-Experimental-steps" class="headerlink" title="3.Experimental steps"></a>3.Experimental steps</h1><p>Please refer to the file “<a href="https://raw.githubusercontent.com/justcourse/mydoc/main/courses/MCU/experiments/Experiment%201.docx">Experiment 1.docx</a>“</p><h1 id="4-Experiment-results-and-analysis"><a href="#4-Experiment-results-and-analysis" class="headerlink" title="4.Experiment results and analysis"></a>4.Experiment results and analysis</h1><p>Please record experiment results and analyze the results.</p>]]></content>
      
      
      <categories>
          
          <category> MCU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MCU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python写HDF5文件</title>
      <link href="2017/05/18/20170518-Python%E5%86%99HDF5%E6%96%87%E4%BB%B6/"/>
      <url>2017/05/18/20170518-Python%E5%86%99HDF5%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>采用Caffe实现多float标签回归时需要采用HDF5数据存储方式。本文归纳了Python读取图像数据和标签，并写入HDF5文件的过程。</p><p>假设有 labels.txt 存储标签如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">img0.jpg  0 10.5 20.5 30.5 40.5</span><br><span class="line">img1.jpg  1  9.5 19.5 29.5 39.5</span><br></pre></td></tr></table></figure><p>Python写HDF5文件的代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> h5py <span class="keyword">as</span> hp</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">h5filesize = <span class="number">10</span> <span class="comment">#修改该值，使HDF5文件小于2GB</span></span><br><span class="line">width = <span class="number">448</span></span><br><span class="line">height = <span class="number">448</span></span><br><span class="line">fid = <span class="built_in">open</span>(<span class="string">&#x27;labels.txt&#x27;</span>)</span><br><span class="line">lines = fid.readlines()</span><br><span class="line">f = hp.File(<span class="string">&#x27;HDF5_FILE.h5&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">imgData = np.zeros((h5filesize, <span class="number">3</span>, height, width))</span><br><span class="line">labels = np.zeros((h5filesize, <span class="number">5</span>))<span class="comment">#标签的长度为5</span></span><br><span class="line">idx=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">    line = line.strip().split()</span><br><span class="line">    image = cv2.imread(line[<span class="number">0</span>])<span class="comment">#Caffe中图像为BGR，即imread获得的图像channel的顺序</span></span><br><span class="line">    image = cv2.resize(image,(width, height))</span><br><span class="line">    image = image.transpose((h5filesize, <span class="number">0</span>, <span class="number">1</span>))<span class="comment">#转换为Caffe中数据的存储顺序：C,H,W</span></span><br><span class="line">    imgData[idx, :, :, :] = image</span><br><span class="line">    labels[idx, <span class="number">0</span>] = <span class="built_in">float</span>(line[<span class="number">1</span>])</span><br><span class="line">    labels[idx, <span class="number">1</span>] = <span class="built_in">float</span>(line[<span class="number">2</span>])</span><br><span class="line">    labels[idx, <span class="number">2</span>] = <span class="built_in">float</span>(line[<span class="number">3</span>])</span><br><span class="line">    labels[idx, <span class="number">3</span>] = <span class="built_in">float</span>(line[<span class="number">4</span>])</span><br><span class="line">    labels[idx, <span class="number">4</span>] = <span class="built_in">float</span>(line[<span class="number">4</span>])</span><br><span class="line">    idx + <span class="number">1</span></span><br><span class="line">f[<span class="string">&#x27;data&#x27;</span>] = imgData</span><br><span class="line">f[<span class="string">&#x27;label&#x27;</span>] = labels</span><br><span class="line">fid.close()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HDF5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eigen与Matlab对应函数列表</title>
      <link href="2017/05/17/20170517-Eigen%E4%B8%8EMatlab%E5%AF%B9%E5%BA%94%E5%87%BD%E6%95%B0%E5%88%97%E8%A1%A8/"/>
      <url>2017/05/17/20170517-Eigen%E4%B8%8EMatlab%E5%AF%B9%E5%BA%94%E5%87%BD%E6%95%B0%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="C-矩阵运算开源库Eigen与Matlab对应函数列表"><a href="#C-矩阵运算开源库Eigen与Matlab对应函数列表" class="headerlink" title="C++矩阵运算开源库Eigen与Matlab对应函数列表"></a>C++矩阵运算开源库Eigen与Matlab对应函数列表</h1><p>作者：Keir Mierle</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A simple quickref for Eigen. Add anything that&#x27;s missing.</span></span><br><span class="line"><span class="comment">// Main author: Keir Mierle</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Eigen/Dense&gt;</span></span></span><br><span class="line"></span><br><span class="line">Matrix&lt;<span class="keyword">double</span>, <span class="number">3</span>, <span class="number">3</span>&gt; A;               <span class="comment">// Fixed rows and cols. Same as Matrix3d.</span></span><br><span class="line">Matrix&lt;<span class="keyword">double</span>, <span class="number">3</span>, Dynamic&gt; B;         <span class="comment">// Fixed rows, dynamic cols.</span></span><br><span class="line">Matrix&lt;<span class="keyword">double</span>, Dynamic, Dynamic&gt; C;   <span class="comment">// Full dynamic. Same as MatrixXd.</span></span><br><span class="line">Matrix&lt;<span class="keyword">double</span>, <span class="number">3</span>, <span class="number">3</span>, RowMajor&gt; E;     <span class="comment">// Row major; default is column-major.</span></span><br><span class="line">Matrix3f P, Q, R;                     <span class="comment">// 3x3 float matrix.</span></span><br><span class="line">Vector3f x, y, z;                     <span class="comment">// 3x1 float matrix.</span></span><br><span class="line">RowVector3f a, b, c;                  <span class="comment">// 1x3 float matrix.</span></span><br><span class="line">VectorXd v;                           <span class="comment">// Dynamic column vector of doubles</span></span><br><span class="line"><span class="keyword">double</span> s;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Basic usage</span></span><br><span class="line"><span class="comment">// Eigen          // Matlab           // comments</span></span><br><span class="line">x.<span class="built_in">size</span>()          <span class="comment">// length(x)        // vector size</span></span><br><span class="line">C.<span class="built_in">rows</span>()          <span class="comment">// size(C,1)        // number of rows</span></span><br><span class="line">C.<span class="built_in">cols</span>()          <span class="comment">// size(C,2)        // number of columns</span></span><br><span class="line"><span class="built_in">x</span>(i)              <span class="comment">// x(i+1)           // Matlab is 1-based</span></span><br><span class="line"><span class="built_in">C</span>(i,j)            <span class="comment">// C(i+1,j+1)       //</span></span><br><span class="line"></span><br><span class="line">A.<span class="built_in">resize</span>(<span class="number">4</span>, <span class="number">4</span>);   <span class="comment">// Runtime error if assertions are on.</span></span><br><span class="line">B.<span class="built_in">resize</span>(<span class="number">4</span>, <span class="number">9</span>);   <span class="comment">// Runtime error if assertions are on.</span></span><br><span class="line">A.<span class="built_in">resize</span>(<span class="number">3</span>, <span class="number">3</span>);   <span class="comment">// Ok; size didn&#x27;t change.</span></span><br><span class="line">B.<span class="built_in">resize</span>(<span class="number">3</span>, <span class="number">9</span>);   <span class="comment">// Ok; only dynamic cols changed.</span></span><br><span class="line"></span><br><span class="line">A &lt;&lt; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>,     <span class="comment">// Initialize A. The elements can also be</span></span><br><span class="line">     <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>,     <span class="comment">// matrices, which are stacked along cols</span></span><br><span class="line">     <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>;     <span class="comment">// and then the rows are stacked.</span></span><br><span class="line">B &lt;&lt; A, A, A;     <span class="comment">// B is three horizontally stacked A&#x27;s.</span></span><br><span class="line">A.<span class="built_in">fill</span>(<span class="number">10</span>);       <span class="comment">// Fill A with all 10&#x27;s.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Eigen                            // Matlab</span></span><br><span class="line">MatrixXd::<span class="built_in">Identity</span>(rows,cols)       <span class="comment">// eye(rows,cols)</span></span><br><span class="line">C.<span class="built_in">setIdentity</span>(rows,cols)            <span class="comment">// C = eye(rows,cols)</span></span><br><span class="line">MatrixXd::<span class="built_in">Zero</span>(rows,cols)           <span class="comment">// zeros(rows,cols)</span></span><br><span class="line">C.<span class="built_in">setZero</span>(rows,cols)                <span class="comment">// C = ones(rows,cols)</span></span><br><span class="line">MatrixXd::<span class="built_in">Ones</span>(rows,cols)           <span class="comment">// ones(rows,cols)</span></span><br><span class="line">C.<span class="built_in">setOnes</span>(rows,cols)                <span class="comment">// C = ones(rows,cols)</span></span><br><span class="line">MatrixXd::<span class="built_in">Random</span>(rows,cols)         <span class="comment">// rand(rows,cols)*2-1        // MatrixXd::Random returns uniform random numbers in (-1, 1).</span></span><br><span class="line">C.<span class="built_in">setRandom</span>(rows,cols)              <span class="comment">// C = rand(rows,cols)*2-1</span></span><br><span class="line">VectorXd::<span class="built_in">LinSpaced</span>(size,low,high)   <span class="comment">// linspace(low,high,size)&#x27;</span></span><br><span class="line">v.<span class="built_in">setLinSpaced</span>(size,low,high)        <span class="comment">// v = linspace(low,high,size)&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Matrix slicing and blocks. All expressions listed here are read/write.</span></span><br><span class="line"><span class="comment">// Templated size versions are faster. Note that Matlab is 1-based (a size N</span></span><br><span class="line"><span class="comment">// vector is x(1)...x(N)).</span></span><br><span class="line"><span class="comment">// Eigen                           // Matlab</span></span><br><span class="line">x.<span class="built_in">head</span>(n)                          <span class="comment">// x(1:n)</span></span><br><span class="line">x.head&lt;n&gt;()                        <span class="comment">// x(1:n)</span></span><br><span class="line">x.<span class="built_in">tail</span>(n)                          <span class="comment">// x(end - n + 1: end)</span></span><br><span class="line">x.tail&lt;n&gt;()                        <span class="comment">// x(end - n + 1: end)</span></span><br><span class="line">x.<span class="built_in">segment</span>(i, n)                    <span class="comment">// x(i+1 : i+n)</span></span><br><span class="line">x.segment&lt;n&gt;(i)                    <span class="comment">// x(i+1 : i+n)</span></span><br><span class="line">P.<span class="built_in">block</span>(i, j, rows, cols)          <span class="comment">// P(i+1 : i+rows, j+1 : j+cols)</span></span><br><span class="line">P.block&lt;rows, cols&gt;(i, j)          <span class="comment">// P(i+1 : i+rows, j+1 : j+cols)</span></span><br><span class="line">P.<span class="built_in">row</span>(i)                           <span class="comment">// P(i+1, :)</span></span><br><span class="line">P.<span class="built_in">col</span>(j)                           <span class="comment">// P(:, j+1)</span></span><br><span class="line">P.leftCols&lt;cols&gt;()                 <span class="comment">// P(:, 1:cols)</span></span><br><span class="line">P.<span class="built_in">leftCols</span>(cols)                   <span class="comment">// P(:, 1:cols)</span></span><br><span class="line">P.middleCols&lt;cols&gt;(j)              <span class="comment">// P(:, j+1:j+cols)</span></span><br><span class="line">P.<span class="built_in">middleCols</span>(j, cols)              <span class="comment">// P(:, j+1:j+cols)</span></span><br><span class="line">P.rightCols&lt;cols&gt;()                <span class="comment">// P(:, end-cols+1:end)</span></span><br><span class="line">P.<span class="built_in">rightCols</span>(cols)                  <span class="comment">// P(:, end-cols+1:end)</span></span><br><span class="line">P.topRows&lt;rows&gt;()                  <span class="comment">// P(1:rows, :)</span></span><br><span class="line">P.<span class="built_in">topRows</span>(rows)                    <span class="comment">// P(1:rows, :)</span></span><br><span class="line">P.middleRows&lt;rows&gt;(i)              <span class="comment">// P(:, i+1:i+rows)</span></span><br><span class="line">P.<span class="built_in">middleRows</span>(i, rows)              <span class="comment">// P(:, i+1:i+rows)</span></span><br><span class="line">P.bottomRows&lt;rows&gt;()               <span class="comment">// P(:, end-rows+1:end)</span></span><br><span class="line">P.<span class="built_in">bottomRows</span>(rows)                 <span class="comment">// P(:, end-rows+1:end)</span></span><br><span class="line">P.<span class="built_in">topLeftCorner</span>(rows, cols)        <span class="comment">// P(1:rows, 1:cols)</span></span><br><span class="line">P.<span class="built_in">topRightCorner</span>(rows, cols)       <span class="comment">// P(1:rows, end-cols+1:end)</span></span><br><span class="line">P.<span class="built_in">bottomLeftCorner</span>(rows, cols)     <span class="comment">// P(end-rows+1:end, 1:cols)</span></span><br><span class="line">P.<span class="built_in">bottomRightCorner</span>(rows, cols)    <span class="comment">// P(end-rows+1:end, end-cols+1:end)</span></span><br><span class="line">P.topLeftCorner&lt;rows,cols&gt;()       <span class="comment">// P(1:rows, 1:cols)</span></span><br><span class="line">P.topRightCorner&lt;rows,cols&gt;()      <span class="comment">// P(1:rows, end-cols+1:end)</span></span><br><span class="line">P.bottomLeftCorner&lt;rows,cols&gt;()    <span class="comment">// P(end-rows+1:end, 1:cols)</span></span><br><span class="line">P.bottomRightCorner&lt;rows,cols&gt;()   <span class="comment">// P(end-rows+1:end, end-cols+1:end)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Of particular note is Eigen&#x27;s swap function which is highly optimized.</span></span><br><span class="line"><span class="comment">// Eigen                           // Matlab</span></span><br><span class="line">R.<span class="built_in">row</span>(i) = P.<span class="built_in">col</span>(j);               <span class="comment">// R(i, :) = P(:, i)</span></span><br><span class="line">R.<span class="built_in">col</span>(j1).<span class="built_in">swap</span>(mat1.<span class="built_in">col</span>(j2));      <span class="comment">// R(:, [j1 j2]) = R(:, [j2, j1])</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Views, transpose, etc; all read-write except for .adjoint().</span></span><br><span class="line"><span class="comment">// Eigen                           // Matlab</span></span><br><span class="line">R.<span class="built_in">adjoint</span>()                        <span class="comment">// R&#x27;</span></span><br><span class="line">R.<span class="built_in">transpose</span>()                      <span class="comment">// R.&#x27; or conj(R&#x27;)</span></span><br><span class="line">R.<span class="built_in">diagonal</span>()                       <span class="comment">// diag(R)</span></span><br><span class="line">x.<span class="built_in">asDiagonal</span>()                     <span class="comment">// diag(x)</span></span><br><span class="line">R.<span class="built_in">transpose</span>().<span class="built_in">colwise</span>().<span class="built_in">reverse</span>(); <span class="comment">// rot90(R)</span></span><br><span class="line">R.<span class="built_in">conjugate</span>()                      <span class="comment">// conj(R)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// All the same as Matlab, but matlab doesn&#x27;t have *= style operators.</span></span><br><span class="line"><span class="comment">// Matrix-vector.  Matrix-matrix.   Matrix-scalar.</span></span><br><span class="line">y  = M*x;          R  = P*Q;        R  = P*s;</span><br><span class="line">a  = b*M;          R  = P - Q;      R  = s*P;</span><br><span class="line">a *= M;            R  = P + Q;      R  = P/s;</span><br><span class="line">                   R *= Q;          R  = s*P;</span><br><span class="line">                   R += Q;          R *= s;</span><br><span class="line">                   R -= Q;          R /= s;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Vectorized operations on each element independently</span></span><br><span class="line"><span class="comment">// Eigen                  // Matlab</span></span><br><span class="line">R = P.<span class="built_in">cwiseProduct</span>(Q);    <span class="comment">// R = P .* Q</span></span><br><span class="line">R = P.<span class="built_in">array</span>() * s.<span class="built_in">array</span>();<span class="comment">// R = P .* s</span></span><br><span class="line">R = P.<span class="built_in">cwiseQuotient</span>(Q);   <span class="comment">// R = P ./ Q</span></span><br><span class="line">R = P.<span class="built_in">array</span>() / Q.<span class="built_in">array</span>();<span class="comment">// R = P ./ Q</span></span><br><span class="line">R = P.<span class="built_in">array</span>() + s.<span class="built_in">array</span>();<span class="comment">// R = P + s</span></span><br><span class="line">R = P.<span class="built_in">array</span>() - s.<span class="built_in">array</span>();<span class="comment">// R = P - s</span></span><br><span class="line">R.<span class="built_in">array</span>() += s;           <span class="comment">// R = R + s</span></span><br><span class="line">R.<span class="built_in">array</span>() -= s;           <span class="comment">// R = R - s</span></span><br><span class="line">R.<span class="built_in">array</span>() &lt; Q.<span class="built_in">array</span>();    <span class="comment">// R &lt; Q</span></span><br><span class="line">R.<span class="built_in">array</span>() &lt;= Q.<span class="built_in">array</span>();   <span class="comment">// R &lt;= Q</span></span><br><span class="line">R.<span class="built_in">cwiseInverse</span>();         <span class="comment">// 1 ./ P</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">inverse</span>();      <span class="comment">// 1 ./ P</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">sin</span>()           <span class="comment">// sin(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">cos</span>()           <span class="comment">// cos(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">pow</span>(s)          <span class="comment">// P .^ s</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">square</span>()        <span class="comment">// P .^ 2</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">cube</span>()          <span class="comment">// P .^ 3</span></span><br><span class="line">R.<span class="built_in">cwiseSqrt</span>()             <span class="comment">// sqrt(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">sqrt</span>()          <span class="comment">// sqrt(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">exp</span>()           <span class="comment">// exp(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">log</span>()           <span class="comment">// log(P)</span></span><br><span class="line">R.<span class="built_in">cwiseMax</span>(P)             <span class="comment">// max(R, P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">max</span>(P.<span class="built_in">array</span>())  <span class="comment">// max(R, P)</span></span><br><span class="line">R.<span class="built_in">cwiseMin</span>(P)             <span class="comment">// min(R, P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">min</span>(P.<span class="built_in">array</span>())  <span class="comment">// min(R, P)</span></span><br><span class="line">R.<span class="built_in">cwiseAbs</span>()              <span class="comment">// abs(P)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">abs</span>()           <span class="comment">// abs(P)</span></span><br><span class="line">R.<span class="built_in">cwiseAbs2</span>()             <span class="comment">// abs(P.^2)</span></span><br><span class="line">R.<span class="built_in">array</span>().<span class="built_in">abs2</span>()          <span class="comment">// abs(P.^2)</span></span><br><span class="line">(R.<span class="built_in">array</span>() &lt; s).<span class="built_in">select</span>(P,Q);  <span class="comment">// (R &lt; s ? P : Q)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Reductions.</span></span><br><span class="line"><span class="keyword">int</span> r, c;</span><br><span class="line"><span class="comment">// Eigen                  // Matlab</span></span><br><span class="line">R.<span class="built_in">minCoeff</span>()              <span class="comment">// min(R(:))</span></span><br><span class="line">R.<span class="built_in">maxCoeff</span>()              <span class="comment">// max(R(:))</span></span><br><span class="line">s = R.<span class="built_in">minCoeff</span>(&amp;r, &amp;c)    <span class="comment">// [s, i] = min(R(:)); [r, c] = ind2sub(size(R), i);</span></span><br><span class="line">s = R.<span class="built_in">maxCoeff</span>(&amp;r, &amp;c)    <span class="comment">// [s, i] = max(R(:)); [r, c] = ind2sub(size(R), i);</span></span><br><span class="line">R.<span class="built_in">sum</span>()                   <span class="comment">// sum(R(:))</span></span><br><span class="line">R.<span class="built_in">colwise</span>().<span class="built_in">sum</span>()         <span class="comment">// sum(R)</span></span><br><span class="line">R.<span class="built_in">rowwise</span>().<span class="built_in">sum</span>()         <span class="comment">// sum(R, 2) or sum(R&#x27;)&#x27;</span></span><br><span class="line">R.<span class="built_in">prod</span>()                  <span class="comment">// prod(R(:))</span></span><br><span class="line">R.<span class="built_in">colwise</span>().<span class="built_in">prod</span>()        <span class="comment">// prod(R)</span></span><br><span class="line">R.<span class="built_in">rowwise</span>().<span class="built_in">prod</span>()        <span class="comment">// prod(R, 2) or prod(R&#x27;)&#x27;</span></span><br><span class="line">R.<span class="built_in">trace</span>()                 <span class="comment">// trace(R)</span></span><br><span class="line">R.<span class="built_in">all</span>()                   <span class="comment">// all(R(:))</span></span><br><span class="line">R.<span class="built_in">colwise</span>().<span class="built_in">all</span>()         <span class="comment">// all(R)</span></span><br><span class="line">R.<span class="built_in">rowwise</span>().<span class="built_in">all</span>()         <span class="comment">// all(R, 2)</span></span><br><span class="line">R.<span class="built_in">any</span>()                   <span class="comment">// any(R(:))</span></span><br><span class="line">R.<span class="built_in">colwise</span>().<span class="built_in">any</span>()         <span class="comment">// any(R)</span></span><br><span class="line">R.<span class="built_in">rowwise</span>().<span class="built_in">any</span>()         <span class="comment">// any(R, 2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Dot products, norms, etc.</span></span><br><span class="line"><span class="comment">// Eigen                  // Matlab</span></span><br><span class="line">x.<span class="built_in">norm</span>()                  <span class="comment">// norm(x).    Note that norm(R) doesn&#x27;t work in Eigen.</span></span><br><span class="line">x.<span class="built_in">squaredNorm</span>()           <span class="comment">// dot(x, x)   Note the equivalence is not true for complex</span></span><br><span class="line">x.<span class="built_in">dot</span>(y)                  <span class="comment">// dot(x, y)</span></span><br><span class="line">x.<span class="built_in">cross</span>(y)                <span class="comment">// cross(x, y) Requires #include &lt;Eigen/Geometry&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//// Type conversion</span></span><br><span class="line"><span class="comment">// Eigen                           // Matlab</span></span><br><span class="line">A.cast&lt;<span class="keyword">double</span>&gt;();                  <span class="comment">// double(A)</span></span><br><span class="line">A.cast&lt;<span class="keyword">float</span>&gt;();                   <span class="comment">// single(A)</span></span><br><span class="line">A.cast&lt;<span class="keyword">int</span>&gt;();                     <span class="comment">// int32(A)</span></span><br><span class="line">A.<span class="built_in">real</span>();                          <span class="comment">// real(A)</span></span><br><span class="line">A.<span class="built_in">imag</span>();                          <span class="comment">// imag(A)</span></span><br><span class="line"><span class="comment">// if the original type equals destination type, no work is done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Note that for most operations Eigen requires all operands to have the same type:</span></span><br><span class="line">MatrixXf F = MatrixXf::<span class="built_in">Zero</span>(<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line">A += F;                <span class="comment">// illegal in Eigen. In Matlab A = A+F is allowed</span></span><br><span class="line">A += F.cast&lt;<span class="keyword">double</span>&gt;(); <span class="comment">// F converted to double and then added (generally, conversion happens on-the-fly)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Eigen can map existing memory into Eigen matrices.</span></span><br><span class="line"><span class="keyword">float</span> array[<span class="number">3</span>];</span><br><span class="line">Vector3f::<span class="built_in">Map</span>(array).<span class="built_in">fill</span>(<span class="number">10</span>);            <span class="comment">// create a temporary Map over array and sets entries to 10</span></span><br><span class="line"><span class="keyword">int</span> data[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;</span><br><span class="line"><span class="function">Matrix2i <span class="title">mat2x2</span><span class="params">(data)</span></span>;                    <span class="comment">// copies data into mat2x2</span></span><br><span class="line">Matrix2i::<span class="built_in">Map</span>(data) = <span class="number">2</span>*mat2x2;           <span class="comment">// overwrite elements of data with 2*mat2x2</span></span><br><span class="line">MatrixXi::<span class="built_in">Map</span>(data, <span class="number">2</span>, <span class="number">2</span>) += mat2x2;      <span class="comment">// adds mat2x2 to elements of data (alternative syntax if size is not know at compile time)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Solve Ax = b. Result stored in x. Matlab: x = A \ b.</span></span><br><span class="line">x = A.<span class="built_in">ldlt</span>().<span class="built_in">solve</span>(b));  <span class="comment">// A sym. p.s.d.    #include &lt;Eigen/Cholesky&gt;</span></span><br><span class="line">x = A.<span class="built_in">llt</span>() .<span class="built_in">solve</span>(b));  <span class="comment">// A sym. p.d.      #include &lt;Eigen/Cholesky&gt;</span></span><br><span class="line">x = A.<span class="built_in">lu</span>()  .<span class="built_in">solve</span>(b));  <span class="comment">// Stable and fast. #include &lt;Eigen/LU&gt;</span></span><br><span class="line">x = A.<span class="built_in">qr</span>()  .<span class="built_in">solve</span>(b));  <span class="comment">// No pivoting.     #include &lt;Eigen/QR&gt;</span></span><br><span class="line">x = A.<span class="built_in">svd</span>() .<span class="built_in">solve</span>(b));  <span class="comment">// Stable, slowest. #include &lt;Eigen/SVD&gt;</span></span><br><span class="line"><span class="comment">// .ldlt() -&gt; .matrixL() and .matrixD()</span></span><br><span class="line"><span class="comment">// .llt()  -&gt; .matrixL()</span></span><br><span class="line"><span class="comment">// .lu()   -&gt; .matrixL() and .matrixU()</span></span><br><span class="line"><span class="comment">// .qr()   -&gt; .matrixQ() and .matrixR()</span></span><br><span class="line"><span class="comment">// .svd()  -&gt; .matrixU(), .singularValues(), and .matrixV()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Eigenvalue problems</span></span><br><span class="line"><span class="comment">// Eigen                          // Matlab</span></span><br><span class="line">A.<span class="built_in">eigenvalues</span>();                  <span class="comment">// eig(A);</span></span><br><span class="line"><span class="function">EigenSolver&lt;Matrix3d&gt; <span class="title">eig</span><span class="params">(A)</span></span>;     <span class="comment">// [vec val] = eig(A)</span></span><br><span class="line">eig.<span class="built_in">eigenvalues</span>();                <span class="comment">// diag(val)</span></span><br><span class="line">eig.<span class="built_in">eigenvectors</span>();               <span class="comment">// vec</span></span><br><span class="line"><span class="comment">// For self-adjoint matrices use SelfAdjointEigenSolver&lt;&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMakeLists.txt中声明使用C++11标准</title>
      <link href="2017/05/09/20170509-CMakeLists.txt-%E4%BD%BF%E7%94%A8C++11%E6%A0%87%E5%87%86/"/>
      <url>2017/05/09/20170509-CMakeLists.txt-%E4%BD%BF%E7%94%A8C++11%E6%A0%87%E5%87%86/</url>
      
        <content type="html"><![CDATA[<p>在CMakeLists.txt中添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add_definitions(-std&#x3D;c++11) </span><br></pre></td></tr></table></figure><p>即可。</p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmake </tag>
            
            <tag> c++11 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git命令行操作指南——上传项目</title>
      <link href="2017/05/09/20170509-Git-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>2017/05/09/20170509-Git-%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>假设已经在github上创建了项目名，地址为:<a href="https://github.com/xx/xx.git">https://github.com/xx/xx.git</a></p><h3 id="1-创建项目目录并初始化"><a href="#1-创建项目目录并初始化" class="headerlink" title="1.创建项目目录并初始化"></a>1.创建项目目录并初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir *** <span class="comment">#项目文件夹</span></span><br><span class="line"><span class="built_in">cd</span> ***</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="2-将所有文件添加到暂存区"><a href="#2-将所有文件添加到暂存区" class="headerlink" title="2.将所有文件添加到暂存区"></a>2.将所有文件添加到暂存区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h3 id="3-将暂存区的文件提交至本地仓库"><a href="#3-将暂存区的文件提交至本地仓库" class="headerlink" title="3.将暂存区的文件提交至本地仓库"></a>3.将暂存区的文件提交至本地仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “注释<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><h3 id="4-将本地仓库关联到Github上"><a href="#4-将本地仓库关联到Github上" class="headerlink" title="4.将本地仓库关联到Github上"></a>4.将本地仓库关联到Github上</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/xx/xx.git</span><br></pre></td></tr></table></figure><h3 id="5-将代码由本地仓库上传到Github远程仓库"><a href="#5-将代码由本地仓库上传到Github远程仓库" class="headerlink" title="5.将代码由本地仓库上传到Github远程仓库"></a>5.将代码由本地仓库上传到Github远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo文章排序</title>
      <link href="2017/05/02/20170502-Hexo%E6%96%87%E7%AB%A0%E6%8E%92%E5%BA%8F/"/>
      <url>2017/05/02/20170502-Hexo%E6%96%87%E7%AB%A0%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<ol><li>修改文件夹中的 node_modules/hexo-generator-index/lib/generator.js文件，在var posts一句后面加入如下代码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">posts.data &#x3D; posts.data.sort(function(first, second) &#123;</span><br><span class="line">        if (first.top &amp;&amp; second.top) &#123; &#x2F;&#x2F; 两篇文章top都有定义</span><br><span class="line">            return first.top &#x3D;&#x3D; second.top ? second.date - first.date : second.top - first.top &#x2F;&#x2F;若top值一样则按照文章日期降序排, 否则按照top值降序排</span><br><span class="line">        &#125; else if (first.top &amp;&amp; !second.top) &#123; &#x2F;&#x2F; 以下是只有一篇文章top有定义，将有top的排在前面</span><br><span class="line">            return -1;</span><br><span class="line">        &#125; else if (!first.top &amp;&amp; second.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return second.date - first.date;  &#x2F;&#x2F; 都没定义top，按照文章日期降序排</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>修改后的代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line"></span><br><span class="line">var pagination &#x3D; require(&#39;hexo-pagination&#39;);</span><br><span class="line"></span><br><span class="line">module.exports &#x3D; function(locals) &#123;</span><br><span class="line">  var config &#x3D; this.config;</span><br><span class="line">  var posts &#x3D; locals.posts.sort(config.index_generator.order_by);</span><br><span class="line"></span><br><span class="line">  posts.data &#x3D; posts.data.sort(function(first, second) &#123;</span><br><span class="line">        if (first.top &amp;&amp; second.top) &#123;</span><br><span class="line">            return first.top &#x3D;&#x3D; second.top ? second.date - first.date : second.top - first.top</span><br><span class="line">        &#125; else if (first.top &amp;&amp; !second.top) &#123;</span><br><span class="line">            return -1;</span><br><span class="line">        &#125; else if (!first.top &amp;&amp; second.top) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return second.date - first.date;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  var paginationDir &#x3D; config.pagination_dir || &#39;page&#39;;</span><br><span class="line">  var path &#x3D; config.index_generator.path || &#39;&#39;;</span><br><span class="line"></span><br><span class="line">  return pagination(path, posts, &#123;</span><br><span class="line">    perPage: config.index_generator.per_page,</span><br><span class="line">    layout: [&#39;index&#39;, &#39;archive&#39;],</span><br><span class="line">    format: paginationDir + &#39;&#x2F;%d&#x2F;&#39;,</span><br><span class="line">    data: &#123;</span><br><span class="line">      __index: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.在Markdown文件头位置，加入如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top: 数字 #数字越大，排名越靠前。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 建立个人博客</title>
      <link href="2017/05/01/20170501-Hexo-%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>2017/05/01/20170501-Hexo-%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>假设已经在github上创建了项目，项目名为<code>abc.github.io</code></p><h1 id="Hexo搭建步骤"><a href="#Hexo搭建步骤" class="headerlink" title="Hexo搭建步骤"></a>Hexo搭建步骤</h1><ul><li><input checked disabled type="checkbox"> 安装Git</li><li><input checked disabled type="checkbox"> 安装Node.js</li><li><input checked disabled type="checkbox"> 安装Hexo</li><li><input checked disabled type="checkbox"> GitHub创建个人仓库</li><li><input checked disabled type="checkbox"> 生成SSH添加到GitHub</li><li><input checked disabled type="checkbox"> 将hexo部署到GitHub</li><li><input checked disabled type="checkbox"> 设置个人域名</li><li><input checked disabled type="checkbox"> 发布文章</li></ul><h2 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure><h2 id="2-安装nodejs"><a href="#2-安装nodejs" class="headerlink" title="2. 安装nodejs"></a>2. 安装nodejs</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><p>安装hexo，输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir myblog</span><br><span class="line">cd myblog</span><br><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>初始化hexo</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>完成后，文件夹目录包含如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">node_modules: 依赖包</span><br><span class="line">public：存放生成的页面</span><br><span class="line">scaffolds：生成文章的一些模板</span><br><span class="line">source：用来存放你的文章</span><br><span class="line">themes：主题</span><br><span class="line">_config.yml: 博客的配置文件</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>清理、生成网页，打开hexo的服务，在浏览器输入localhost:4000可以看到生成的博客。</p><h2 id="4-GitHub创建个人仓库"><a href="#4-GitHub创建个人仓库" class="headerlink" title="4. GitHub创建个人仓库"></a>4. GitHub创建个人仓库</h2><p>注册并登录github后，新建仓库New repository</p><p>创建与用户名相同的仓库，如：abc.github.io，其中abc为GitHub用户名。</p><p>点击create repository。</p><h2 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5. 生成SSH添加到GitHub"></a>5. 生成SSH添加到GitHub</h2><p>回到shell，输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>yourname为GitHub的用户名，youremail为GitHub的邮箱，该操作用于github对用户名和邮箱信息进行匹配验证。</p><p>检查上述name和email是否正确</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure><p>创建SSH</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure><p>生成~/.ssh的文件夹及密钥文件。</p><p>在GitHub的setting中，找到SSH keys的设置选项，点击New SSH key。</p><p>复制SSH生成的id_rsa.pub中的信息并粘贴到文本框中。</p><h2 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub"></a>6. 将hexo部署到GitHub</h2><p>运行如下命令，适中保存github用户名和密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><p>修改配置文件<code>_config.yml</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;abc&#x2F;abc.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>安装<code>deploy-git</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>使用hexo命令清理、生成、部署博客网页</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>必要时输入username和password。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Create New Page</title>
      <link href="2017/04/20/20170420-CreateNewPage/"/>
      <url>2017/04/20/20170420-CreateNewPage/</url>
      
        <content type="html"><![CDATA[<h1 id="This-is-the-title"><a href="#This-is-the-title" class="headerlink" title="This is the title."></a>This is the title.</h1><h2 id="This-is-an-image"><a href="#This-is-an-image" class="headerlink" title="This is an image"></a>This is an image</h2><p><img src="https://raw.githubusercontent.com/justcourse/mydoc/main/icons/getoffinternet.jpg"></p><h2 id="This-is-a-code-block"><a href="#This-is-a-code-block" class="headerlink" title="This is a code block."></a>This is a code block.</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z = <span class="number">-32768</span>;</span><br><span class="line">    z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="This-is-a-table"><a href="#This-is-a-table" class="headerlink" title="This is a table."></a>This is a table.</h2><table><thead><tr><th>Variable</th><th>Value</th></tr></thead><tbody><tr><td>a</td><td>10</td></tr><tr><td>b</td><td>20</td></tr></tbody></table><h2 id="This-is-a-math-equation"><a href="#This-is-a-math-equation" class="headerlink" title="This is a math equation"></a>This is a math equation</h2><p>$$<br>    \sum_{i=0}^N\int_{a}^{b}g(t,i)\text{d}t<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
